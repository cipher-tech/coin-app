{"version":3,"sources":["pages/admin/rates/rates.jsx"],"names":["Container","styled","div","props","gridPos","theme","colorLight","colorDark","font","large","colorSecondary","breakPoints","bpSmall2","colorPrimary","arge","medium","mapDispatchToProps","fetchAllRates","fetchAllRatesActionCreator","connect","rates","user","users","coinOnlyRates","allRates","filter","item","type","cardOnlyRates","useState","isSelling","isModalActive","setIsModalActive","refrenceId","showpopUpMessage","setShowPopUpMessage","popUpMessage","error","coinKeys","setCoinKeys","useEffect","auth_token","Storage","get","Axios","routes","api","getRates","then","res","data","map","name","Set","onClick","isActive","className","role","aria-label","src","qrcode","alt","index","key","attributes","attribute","i","country","class","from","to","rate","quantity","length","coinName","buying","console"],"mappings":"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","file":"static/js/16.7dfd1e2d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\n// import rateImage from \"../../../images/rate.png\"\r\n// import Table from './table'\r\n// import CoinWidget from \"../../../components/widget/wigjet\"\r\n// import lock from \"../../../images/svgIcons/lock.svg\"\r\nimport qrcode from \"../../../images/qrcode.png\"\r\nimport Axios from 'axios'\r\n// import bitcoinIcon from \"../../../images/btcIcon.jpg\"\r\n// import ethIcon from \"../../../images/etheteumIcon.jpg\"\r\n// import poeIcon from \"../../../images/poeIcon.jpg\"\r\n// import lunoIcon from \"../../../images/lunoIcon.jpg\"\r\n// import xCoinIcon from \"../../../images/xCoinIcon.jpg\"\r\nimport routes from '../../../navigation/routes'\r\nimport { fetchAllRatesActionCreator } from '../../../reduxStore'\r\nimport { connect } from 'react-redux'\r\n// import PaginatedTable from '../../../components/table/tablePagination'\r\nimport { /* StyledButton */ Modal, PopUpMessage, Storage } from '../../../components'\r\n// import { StyledInput } from '../../../components/styledComponents'\r\n// import { FormValidator } from '../../../formValidator'\r\n// import { ValidationMessage } from '../../../validationMessage'\r\n// import CoinWidget from '../../../components/widget/wigjet'\r\n\r\nconst Container = styled.div`\r\n    grid-column: ${props => props.gridPos || \"2/-1\"};\r\n    display: grid;\r\n    min-height: 100%;\r\n    min-width: 100%;\r\n    place-items: flex-start;\r\n    background: ${props => props.theme.colorLight};\r\n    border-radius: 2rem 0 0 2rem;\r\n    z-index: 30;\r\n\r\n\r\n\t.modal__container{\r\n        place-items: center;\r\n        background: ${props => props.theme.colorLight};\r\n        padding: 2rem 3rem;\r\n        height: max-content;\r\n        align-self: center;\r\n        color: ${props => props.theme.colorDark};\r\n        text-align: center;\r\n        position: relative;\r\n        border-radius: 1rem;\r\n        display: grid;\r\n\r\n        .close{\r\n            justify-self: flex-end;\r\n            cursor: pointer;\r\n        }\r\n        img{\r\n            height: 20rem;\r\n            width: 20rem;\r\n        }\r\n        &--text{\r\n            padding: 1rem;\r\n        }\r\n        &-address{\r\n            font-size: ${props => props.theme.font.large};\r\n            color: ${props => props.theme.colorSecondary};\r\n        }\r\n    }\r\n    .rate{\r\n        grid-column: 1/-1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(40rem, 1fr));\r\n        width: 100%;\r\n        /* padding: 3rem; */\r\n        align-items: flex-start;\r\n        place-items: center;\r\n        /* height: 78vh; */\r\n        @media only screen and (max-width: ${props => props.theme.breakPoints.bpSmall2}) {\r\n           padding: 3rem 0;\r\n        }\r\n\t\t&-attrHeader{\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tgrid-column: 1/-1;\r\n\t\t\t\tpadding: 1.5rem;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\t/* width: 100%; */\r\n\t\t\t\tcolor: ${props => props.theme.colorPrimary};\r\n\t\t\t\t/* font-size: ${props => props.theme.font.arge}; */\r\n\t\t}\r\n        &_chat{\r\n\t\t\tdisplay: grid;\r\n\t\t\tgrid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));\r\n\t\t\tgrid-template-rows: repeat(2, minmax(30rem, 1fr));\r\n\t\t\tgap: 2rem;\r\n\t\t\talign-self: flex-start;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 35rem;\r\n\t\t}\r\n\t\t&-card{\r\n\t\t\tgrid-column: 1/-1;\r\n\t\t\tcolor: ${props => props.theme.colorDark};\r\n\t\t\twidth: 96%;\r\n\t\t\tdisplay: grid;\r\n\t\t\tjustify-items: space-around;\r\n\t\t\tbackground: transparent;\r\n\t\t\tgrid-template-columns: repeat(5, 1fr);\r\n\t\t\tgap: 0 .5rem;\r\n\t\t\t&__button{\r\n\t\t\t\talign-self: center;\r\n\t\t\t\tborder-radius: 1rem;\r\n\t\t\t\tpadding: 1.5rem 1.5rem;\r\n\t\t\t}\r\n\t\t\t.header{\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tcolor: ${props => props.theme.colorPrimary};\r\n\t\t\t\tfont-size: ${props => props.theme.font.medium};\r\n\t\t\t}\r\n\t\t\t&-group{\r\n\t\t\t\tgrid-column: 1/-1;\r\n\t\t\t\tborder: none 1px;\r\n\t\t\t\tpadding: 1rem;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmargin: 1rem 0;\r\n\t\t\t\tborder-color: ${props => props.theme.colorPrimary};\r\n\t\t\t\tlegend{\r\n\t\t\t\t\tfont-size: ${props => props.theme.font.large};\r\n\t\t\t\t\tcolor: ${props => props.theme.colorPrimary};\r\n\t\t\t\t\ttext-transform: capitalize;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t&-attributes{\r\n\t\t\t\tgrid-column: 1/-1;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\t/* min-width: 55rem; */\r\n\t\t\t\tjustify-content: space-around;\r\n\t\t\t\tpadding: 1rem 1.5rem;\r\n\t\t\t\tmargin: 1rem 0;\r\n\t\t\t\tbox-shadow: .2rem .3rem 10px rgba(0,0,0, .3),\r\n\t\t\t\t\t-0.2rem -0.3rem 20px rgba(255,255,255, .3);\r\n\t\t\t\tborder-radius: 1.4rem;\r\n\t\t\t\t&__item{\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\ttext-transform: capitalize;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t\tjustify-content: space-around;\r\n\t\t\t\t}\r\n\t  \t\t}\r\n\t\t}\t\r\n        img, #icon{\r\n            height: 3rem;\r\n            width: 3rem;        }\r\n\r\n    }\r\n`\r\nfunction MasterAdminRates({ gridPos, fetchAllRates, rates, coinOnlyRates, cardOnlyRates = [] }) {\r\n\tconst [isSelling, /* setIsSelling */] = useState(true)\r\n\t// const [amount, setAmount] = useState(\"\")\r\n\t// const [account_no, setAccount_no] = useState('')\r\n\t// const [card_id, setCard_id] = useState('')\r\n\tconst [isModalActive, setIsModalActive] = useState(false)\r\n\t// const [giftCardImage, setGiftCardImage] = useState(null)\r\n\r\n\t// eslint-disable-next-line\r\n\tconst [refrenceId, setRefrenceId] = useState(!false)\r\n\tconst [showpopUpMessage, setShowPopUpMessage] = useState(false)\r\n\r\n\t// eslint-disable-next-line\r\n\tconst [popUpMessage, setPopUpMessage] = useState(null)\r\n\r\n\t// eslint-disable-next-line\r\n\tconst [error, setError] = useState(false)\r\n\tconst [coinKeys, setCoinKeys] = useState([])\r\n\t// const [isLoading, setIsLoading] = useState(false)\t\r\n\t// const [giftCardInfo, setGiftCardInfo] = useState([])\r\n\r\n\t// const auth_token = Storage.get(\"userInfo\")?.user?.auth_token\r\n\t// const user_id = Storage.get(\"userInfo\")?.user?.id\r\n\tuseEffect(() => {\r\n\t\tconst auth_token = !Storage.get(\"userInfo\") ? \"\" : Storage.get(\"userInfo\").user.auth_token || \"\"\r\n\t\t// console.log('data :>> ', data);\r\n\t\tAxios.get(`${routes.api.getRates}?token=${auth_token}`)\r\n\t\t\t.then(res => {\r\n\t\t\t\t// console.log(res.data.data);\r\n\t\t\t\tfetchAllRates(res.data.data)\r\n\r\n\t\t\t\treturn res.data.data\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tlet coinKeys = res.filter(item => item.type === \"coin\").map(item => ((item.name)))\r\n\t\t\t\tsetCoinKeys([...new Set(coinKeys)])\r\n\t\t\t\t// setGiftCardInfo(res.filter(item => item.type === \"card\"))\r\n\t\t\t\t// console.log(cardOnlyRates);\r\n\t\t\t})\r\n\r\n\t\t// eslint-disable-next-line\r\n\t}, [fetchAllRates])\r\n\r\n\t// const coinIcons = {\r\n\t// \tbitcoin: bitcoinIcon,\r\n\r\n\t// \tetherum: ethIcon,\r\n\r\n\t// \t// bitcoin: bitcoinIcon,\r\n\r\n\t// \t'gift Card': poeIcon,\r\n\r\n\t// \tnike: xCoinIcon,\r\n\r\n\t// \txpss: lunoIcon,\r\n\r\n\t// \tcycoin: poeIcon,\r\n\r\n\t// }\r\n\t// const columns = [\r\n\t// \t{\r\n\t// \t\tHeader: ' ',\r\n\t// \t\t// accessor: 'name',\r\n\t// \t\taccessor: (rowInfo) => (\r\n\t// \t\t\t<img id=\"icon\" src={coinIcons[rowInfo?.name] || bitcoinIcon} alt=\"cycoin\" />\r\n\t// \t\t),\r\n\t// \t\tcollapse: true,\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tHeader: 'Coin Rates',\r\n\t// \t\tcolumns: [\r\n\t// \t\t\t// {\r\n\t// \t\t\t//   Header: 'Current_rate',\r\n\t// \t\t\t//   accessor: 'current_rate',\r\n\t// \t\t\t//   collapse: true,\r\n\t// \t\t\t// },\r\n\t// \t\t\t{\r\n\t// \t\t\t\tHeader: 'Name',\r\n\t// \t\t\t\taccessor: 'name',\r\n\t// \t\t\t\tcollapse: true,\r\n\t// \t\t\t},\r\n\t// \t\t\t{\r\n\t// \t\t\t\tHeader: 'Type',\r\n\t// \t\t\t\taccessor: 'type',\r\n\t// \t\t\t},\r\n\t// \t\t\t{\r\n\t// \t\t\t\tHeader: 'Buying',\r\n\t// \t\t\t\taccessor: 'buying',\r\n\t// \t\t\t\tcollapse: true,\r\n\t// \t\t\t},\r\n\t// \t\t\t{\r\n\t// \t\t\t\tHeader: 'Selling',\r\n\t// \t\t\t\taccessor: 'selling',\r\n\t// \t\t\t\tcollapse: true,\r\n\t// \t\t\t},\r\n\t// \t\t\t{\r\n\t// \t\t\t\t// Make an expander cell\r\n\t// \t\t\t\tHeader: () => null, // No header\r\n\t// \t\t\t\tid: 'expander', // It needs an ID\r\n\r\n\t// \t\t\t\tCell: ({ row }) => (\r\n\t// \t\t\t\t\t// Use Cell to render an expander for each row.\r\n\t// \t\t\t\t\t// We can use the getToggleRowExpandedProps prop-getter\r\n\t// \t\t\t\t\t// to build the expander.\r\n\t// \t\t\t\t\t<div onClick={() => console.log(\"opennnn\")} {...row.getToggleRowExpandedProps()}>\r\n\t// \t\t\t\t\t\t{row.isExpanded ?\r\n\t// \t\t\t\t\t\t\t<div className=\"options_btn\">\r\n\t// \t\t\t\t\t\t\t\t<StyledButton small>\r\n\t// \t\t\t\t\t\t\t\t\tCancel\r\n\t// \t\t\t\t\t\t\t\t</StyledButton>\r\n\t// \t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t:\r\n\t// \t\t\t\t\t\t\t<div className=\"options_btn\">\r\n\t// \t\t\t\t\t\t\t\t<StyledButton small onClick={(e) => sellHandler(\"selling\")}>\r\n\t// \t\t\t\t\t\t\t\t\tsell\r\n\t// \t\t\t\t\t\t\t\t</StyledButton>\r\n\t// \t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t}\r\n\r\n\t// \t\t\t\t\t\t{/* <StyledButton small onClick={(e) => buyHandler()}>\r\n\t// \t\t\t\t\t\t\t\tBuy\r\n\t// \t\t  \t\t\t\t\t</StyledButton> */}\r\n\r\n\t// \t\t\t\t\t</div>\r\n\t// \t\t\t\t),\r\n\t// \t\t\t},\r\n\t// \t\t\t{\r\n\t// \t\t\t\t// Make an expander cell\r\n\t// \t\t\t\tHeader: () => null, // No header\r\n\t// \t\t\t\tid: 'buy', // It needs an ID\r\n\r\n\t// \t\t\t\tCell: ({ row }) => (\r\n\t// \t\t\t\t\t// Use Cell to render an expander for each row.\r\n\t// \t\t\t\t\t// We can use the getToggleRowExpandedProps prop-getter\r\n\t// \t\t\t\t\t// to build the expander.\r\n\t// \t\t\t\t\t<div onClick={() => console.log(\"opennnn\")} {...row.getToggleRowExpandedProps()}>\r\n\t// \t\t\t\t\t\t{console.log()}\r\n\t// \t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\trow.original.type === \"card\" ? null\r\n\t// \t\t\t\t\t\t\t\t:\r\n\t// \t\t\t\t\t\t\t\trow.isExpanded ?\r\n\t// \t\t\t\t\t\t\t\t\t<div className=\"options_btn\">\r\n\t// \t\t\t\t\t\t\t\t\t\t<StyledButton small>\r\n\t// \t\t\t\t\t\t\t\t\t\t\tCancel\r\n\t// \t\t\t\t\t\t\t\t\t\t</StyledButton>\r\n\t// \t\t\t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t\t\t:\r\n\t// \t\t\t\t\t\t\t\t\t<div className=\"options_btn\">\r\n\t// \t\t\t\t\t\t\t\t\t\t<StyledButton small onClick={(e) => buyHandler(\"buying\")}>\r\n\t// \t\t\t\t\t\t\t\t\t\t\tBuy\r\n\t// \t\t\t\t\t\t\t\t\t\t</StyledButton>\r\n\t// \t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t// \t\t\t\t\t\t}\r\n\r\n\t// \t\t\t\t\t</div>\r\n\t// \t\t\t\t),\r\n\t// \t\t\t},\r\n\r\n\t// \t\t],\r\n\t// \t},\r\n\r\n\t// ]\r\n\t// const buyHandler = () => {\r\n\t// \tsetIsSelling(false)\r\n\t// }\r\n\t// const sellHandler = () => {\r\n\t// \tsetIsSelling(true)\r\n\t// }\r\n\treturn (\r\n\t\t<Container gridPos={gridPos}>\r\n\r\n\t\t\t{showpopUpMessage ? <PopUpMessage error={error}> {popUpMessage} <span onClick={() => setShowPopUpMessage(false)}>✖</span> </PopUpMessage> : null}\r\n\r\n\t\t\t<Modal isActive={isModalActive}>\r\n\t\t\t\t<div className=\"modal__container\">\r\n\t\t\t\t\t<span role=\"img\" aria-label=\"img\" className=\"close\" onClick={() => setIsModalActive(false)}>\r\n\t\t\t\t\t\t❌\r\n\r\n                        </span>\r\n\t\t\t\t\t<img src={qrcode} alt=\"\" />\r\n\r\n\t\t\t\t\t<p className=\"modal__container--text\">\r\n\t\t\t\t\t\tplease pay the specified amount into this {isSelling ? \"address\" : \"account\"}\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<p className=\"modal__container-address\">\r\n\t\t\t\t\t\t{isSelling ? \"d763hei899o889hvy889yvreiohvo99e9jv8r98re8viu89h\" : \"UBA\" + <br /> + \" 0236736793\"}\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<p className=\"modal__container--text\">\r\n\t\t\t\t\t\tAfter successful payment contact customer care with this unique refrence id: <br />\r\n\r\n\t\t\t\t\t\t<span className=\"modal__container-address\">\r\n\t\t\t\t\t\t\t{refrenceId}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t\t<div className=\"rate\">\r\n\r\n\t\t\t\t<h2 className=\"rate-attrHeader\">Gift Cards</h2>\r\n\t\t\t\t<div className=\"rate-card\">\r\n\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcardOnlyRates.map((item, index) => (\r\n\t\t\t\t\t\t\t<fieldset className=\"rate-card-group\" key={index}>\r\n\t\t\t\t\t\t\t\t<legend>{item.name}</legend>\r\n\t\t\t\t\t\t\t\t<p className=\"rate-card-attributes header\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">Country</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">Class</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">Range</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">Rate(₦)</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">Qty</span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\titem?.attributes?.map((attribute, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<p key={i} className=\"rate-card-attributes\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{attribute.country}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{attribute.class}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{attribute.from} - {attribute.to}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{attribute.rate}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.quantity}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t</fieldset>\r\n\r\n\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<h2 className=\"rate-attrHeader\">Coins</h2>\r\n\r\n\t\t\t\t<div className=\"rate-card\">\r\n\t\t\t\t\t{/* {console.log(coinOnlyRates?.length)} */}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t!coinOnlyRates?.length ? console.log('here') :\r\n\t\t\t\t\t\t\tcoinKeys.map((coinName, index) => (\r\n\t\t\t\t\t\t\t\t<fieldset className=\"rate-card-group\" key={index}>\r\n\t\t\t\t\t\t\t\t\t<legend>{coinName}</legend>\r\n\t\t\t\t\t\t\t\t\t<p className=\"rate-card-attributes header\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">Name</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">Class</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">Worth</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">Rate(₦)</span>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t{coinOnlyRates.map((item, index) => (\r\n\r\n\t\t\t\t\t\t\t\t\t\tcoinName === item.name ?\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<p key={index} className=\"rate-card-attributes\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.class}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.from} - {item.to}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"rate-card-attributes__item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.buying}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <PaginatedTable tableColumns={columns} expandedComponent={expandedComponent} data={rates.allRates ? rates.allRates : []} /> */}\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\nconst mapStateToProps = ({ rates, users }) => ({\r\n\trates: rates,\r\n\tuser: users,\r\n\tcoinOnlyRates: rates?.allRates?.filter(item => item.type === \"coin\"),\r\n\tcardOnlyRates: rates?.allRates?.filter(item => item.type === \"card\"),\r\n\t// coinkeys: [...new Set(Object.keys(rates?.allRates?.filter(item => item.type === \"coin\") || []))] \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\tfetchAllRates: fetchAllRatesActionCreator\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MasterAdminRates)\r\n"],"sourceRoot":""}