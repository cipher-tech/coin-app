{"version":3,"sources":["pages/auth/login/login.jsx"],"names":["Container","styled","div","props","theme","colorLight","breakPoints","bpMedium2","colorPrimaryLight","font","larger","large","xlarge","colorPrimary","colorWhite","colorError","small","Login","submit","data","a","setState","isLoading","state","Axios","post","routes","api","login","then","res","status","message","fetchUserInfo","user","logInInfo","isLoggedIn","localStorage","userInfo","JSON","stringify","history","push","admin","index","console","log","users","catch","err","resetEmail","resetPassword","email","popUpMessage","showpopUpMessage","isActive","error","updateFormValue","name","value","updateResetValue","modalState","modalRule","required","minlength","password","type","messageDetails","rules","this","onClick","setShowPopUpMessage","className","to","buttonText","buttonClass","classname","handleChange","placeHolder","icon","envelope","field","lock","Component","mapDispatchToProps","fetchUserInfoActionCreator","connect"],"mappings":"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","file":"static/js/19.82218486.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { ReactComponent as WelcomeSvg } from \"../../../images/svgIcons/welcomeSvg.svg\"\r\n// import Home from \"../../../images/svgIcons/home.svg\"\r\nimport lock from \"../../../images/svgIcons/lock.svg\"\r\nimport envelope from \"../../../images/svgIcons/envelope.svg\"\r\n// import phoneHandset from \"../../../images/svgIcons/phone-handset.svg\"\r\n\r\nimport { StyledInput } from '../../../components/styledComponents'\r\nimport { FormValidator } from '../../../formValidator'\r\nimport { ValidationMessage } from '../../../validationMessage'\r\nimport { Link } from 'react-router-dom'\r\nimport Axios from 'axios'\r\nimport routes from '../../../navigation/routes'\r\nimport { fetchUserInfoActionCreator } from '../../../reduxStore'\r\nimport { connect } from 'react-redux'\r\nimport { Modal, PopUpMessage } from '../../../components'\r\n\r\n\r\nconst Container = styled.div`\r\n    grid-column: 1/-1;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    place-items: center;\r\n    min-height: 100vh;\r\n    /* min-width: 100vh; */\r\n    background: ${props => props.theme.colorLight};\r\n    .login{\r\n        grid-column: 2/6;\r\n        /* height: 60vh; */\r\n        display: grid;\r\n        grid-template-columns: 40% 1fr;\r\n        width: 100%;\r\n        box-shadow: .2rem .4rem 10px rgba(0,0,0, .3),\r\n        -0.2rem -0.4rem 10px rgba(255,255,255, .3);\r\n        background: ${props => props.theme.colorLight};\r\n        /* overflow: hidden; */\r\n        border-radius: .9rem;\r\n        @media only screen and (max-width: ${props => props.theme.breakPoints.bpMedium2}) {\r\n            grid-column: 1/-1;\r\n            width: 90%;\r\n\r\n        }\r\n\r\n        &__side-left{\r\n            background: ${props => props.theme.colorPrimaryLight};\r\n            display: grid;\r\n            padding: 2rem;\r\n            position: relative;\r\n            font-family: ProximaNovaSoftW03-Regular;\r\n            /* background-image: url($);\r\n            background-repeat: no-repeat;\r\n            background-position: 104px right; */\r\n            .circle{\r\n                position: absolute;\r\n                height: 20rem;\r\n                width: 20rem;\r\n                right: -10rem;\r\n                top: -10rem;\r\n                background: #eee;\r\n                border-radius: 50%\r\n            }\r\n            .circle2{\r\n                position: absolute;\r\n                height: 20rem;\r\n                width: 20rem;\r\n                left: -10rem;\r\n                bottom: -10rem !important;\r\n                background: #eee;\r\n                border-radius: 50%\r\n            }\r\n            &-title{\r\n                display: flex;\r\n                align-self: center;\r\n                justify-content: center;\r\n                text-align: center;\r\n                font-size: ${props => props.theme.font.larger};\r\n                font-weight: 600;\r\n                padding-top: 5rem;\r\n            }\r\n            &-text{\r\n                display: flex;\r\n                text-align: center;\r\n                justify-content: center;\r\n                align-self: center;\r\n                line-height: 2;\r\n                font-size: ${props => props.theme.font.large};\r\n\r\n            }\r\n            &-button{\r\n                display: grid;\r\n\r\n                align-self: center;\r\n                justify-self: center;\r\n                text-align: center;\r\n                justify-content: center;\r\n                padding: 1rem 4.5rem;\r\n                font-size: ${props => props.theme.font.xlarge};\r\n                border-radius: 20rem;\r\n                text-decoration: none;\r\n                border: 1px solid ${props => props.theme.colorLight};\r\n                box-shadow: .2rem .4rem 10px rgba(0,0,0, .3),\r\n                -0.2rem -0.4rem 20px rgba(255,255,255, .3);\r\n                background: transparent;\r\n                color: ${props => props.theme.colorLight};\r\n                /* border: none; */\r\n                margin: 1rem 1rem 4rem 1rem;\r\n\r\n                &:active{\r\n                    box-shadow: -0.2rem -0.4rem 20px rgba(255,255,255, .3),\r\n                        .2rem .4rem 10px rgba(0,0,0, .3);\r\n                    color: ${props => props.theme.colorPrimary};\r\n                }\r\n                &:focus{\r\n                    outline: none;\r\n                }\r\n            }\r\n            @media only screen and (max-width: ${props => props.theme.breakPoints.bpMedium2}) {\r\n                display: none\r\n            }\r\n        }\r\n        &__side-right{\r\n            background: ${props => props.theme.colorWhite};\r\n            width: 100%;\r\n            display: grid;\r\n            justify-items: center;\r\n            @media only screen and (max-width: ${props => props.theme.breakPoints.bpMedium2}) {\r\n                grid-column: 1/-1;\r\n            }\r\n            &-image{\r\n                display: grid;\r\n                place-self: center\r\n            }\r\n\r\n            &-title{\r\n                justify-self: center;\r\n                text-align: left;\r\n                width: 70%;\r\n                color: ${props => props.theme.colorPrimary};\r\n                font-size: ${props => props.theme.font.larger};\r\n                font-weight: 500;\r\n            }\r\n            &-message{\r\n                justify-self: center;\r\n                text-align: left;\r\n                width: 70%;\r\n                color: ${props => props.theme.colorError};\r\n                font-size: ${props => props.theme.font.small};\r\n                font-weight: 500;\r\n            }\r\n            &-container{\r\n                justify-self: flex-start;\r\n                width: 100%;\r\n                display: grid;\r\n                justify-items: center;\r\n\r\n                &-modal{\r\n                    background: white;\r\n                    /* width: 30rem; */\r\n                    padding: 3rem;\r\n                    /* height: 40rem; */\r\n                    align-self: center;\r\n                    border-radius: 1rem;\r\n                    color: ${props => props.theme.colorPrimary};\r\n                    &-form{\r\n                        /* justify-self: flex-start; */\r\n                        width: 95%;\r\n                    }\r\n                }\r\n            }\r\n            &-form{\r\n                /* justify-self: flex-start; */\r\n                width: 75%;\r\n            }\r\n            &-isSugnedIn{\r\n                justify-self: center;\r\n                text-align: left;\r\n                width: 70%;\r\n                color: ${props => props.theme.colorPrimary};\r\n                &-action{\r\n                    font-weight: 700;\r\n                    text-decoration: none;\r\n                    &-red{\r\n                        color: ${props => props.theme.colorError};\r\n                    }\r\n                }\r\n            }\r\n            &-summit{\r\n                display: grid;\r\n                align-self: center;\r\n                justify-self: flex-end;\r\n                text-align: center;\r\n                justify-content: center;\r\n                padding: 1rem 6rem;\r\n                font-size: ${props => props.theme.font.xlarge};\r\n                border-radius: 20rem;\r\n                border: 1px solid ${props => props.theme.colorLight};\r\n                box-shadow: .2rem .4rem 10px rgba(0,0,0, .3),\r\n                -0.2rem -0.4rem 20px rgba(255,255,255, .3);\r\n                background: ${props => props.theme.colorPrimary};\r\n                color: ${props => props.theme.colorLight};\r\n                /* border: none; */\r\n                margin: 1rem 5.5rem;\r\n\r\n                &:active{\r\n                    box-shadow: -0.2rem -0.4rem 20px rgba(255,255,255, .3),\r\n                        .2rem .4rem 10px rgba(0,0,0, .3);\r\n                    color: ${props => props.theme.colorPrimary};\r\n                }\r\n                &:focus{\r\n                    outline: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.modalState = {\r\n            resetEmail: \"\",\r\n        }\r\n        this.modalRule = {\r\n            resetEmail: { required: true, minlength: 4, email: true },\r\n        }\r\n\r\n        this.state = {\r\n            isActive: false,\r\n            email: \"\",\r\n            resetEmail: \"\",\r\n            password: \"\",\r\n            type: \"client\",\r\n            isLoading: false,\r\n            message: \"\",\r\n            messageDetails: \"Email or password incorrect\",\r\n            showpopUpMessage: false,\r\n            popUpMessage: \"\",\r\n            error: false,\r\n        }\r\n        this.rules = {\r\n            email: { required: true, minlength: 4, email: true },\r\n            password: { required: true, minlength: 6, },\r\n            // order: { required: true }\r\n        }\r\n    }\r\n    submit = async (data) => {\r\n        // console.log('data :>> ', data);\r\n        this.setState({ isLoading: !this.state.isLoading })\r\n        Axios.post(routes.api.login, data) //routes.api.login\r\n            .then(res => {\r\n                if (res.data.status === false) {\r\n                    // console.log(res.data);\r\n                    // this.props.history.push(routes.admin.index)\r\n                    this.setState({ message: res.data.data, isLoading: !this.state.isLoading })\r\n                }\r\n                if (res.data.status) {\r\n                    this.props.fetchUserInfo(res.data.data.user)\r\n                    this.setState({ message: false, isLoading: !this.state.isLoading })\r\n                    const logInInfo = {\r\n                        isLoggedIn: true,\r\n                        user: res.data.data.user\r\n                    }\r\n                    localStorage.userInfo = JSON.stringify(logInInfo)\r\n\r\n                    this.props.history.push(routes.admin.index)\r\n\r\n                }\r\n            })\r\n            .then(res => console.log(this.props.users))\r\n            .catch(err => console.log(err))\r\n        // console.log('state :>> ', this.state);\r\n    }\r\n    resetEmail = (data) => {\r\n        console.log(data);\r\n        const {resetEmail} = data\r\n        // setIsLoading(true)\r\n        this.setState( state => { return  state.isLoading = true })\r\n\r\n\t\t// console.log('data :>> ', data);\r\n\t\tAxios.post(`${routes.api.resetPassword}`, {email: resetEmail})\r\n\t\t\t.then(res => {\r\n\t\t\t\tif (res.data.status === \"success\") {\r\n                    this.setState((state, props) => { return { \r\n                        popUpMessage: \"Password reset Successfully\",\r\n                        showpopUpMessage: true,\r\n                        isLoading: false,\r\n                        isActive: false,\r\n                     }})\r\n                    \r\n\t\t\t\t\t// console.log(res.data);\r\n\t\t\t\t\t// setPopUpMessage(\"Added Successfully\")\r\n                    // setShowPopUpMessage(true)\r\n\t\t\t\t\t// setIsLoading(false)\r\n\t\t\t\t\t\r\n\t\t\t\t\t// fetchAllRates(res.data.data)\r\n\t\t\t\t\t// setIsActive(false)\r\n                }\r\n\t\t\t})\r\n\t\t\t.catch(res => {\r\n                this.setState((state, props) => { return { \r\n                    error: !false,\r\n                    showpopUpMessage: true,\r\n                    popUpMessage: \"An error occured while trying to Password reset. Make sure you are registered \",\r\n                    isLoading: false,\r\n                    isActive: false,\r\n                 }})\r\n\t\t\t})\r\n\r\n    }\r\n    updateFormValue = (name, value) => {\r\n        this.setState({ [name]: value });\r\n    }\r\n    updateResetValue = (name, value) => {\r\n        this.setState({ [name]: value });\r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n\t\t{this.state.showpopUpMessage ? <PopUpMessage error={this.state.error}> {this.state.popUpMessage} <span onClick={() => this.setState({setShowPopUpMessage:false})}>✖</span> </PopUpMessage> : null}\r\n\r\n                <div className=\"login\">\r\n                    <div className=\"login__side-left\">\r\n                        <div className=\"circle\" />\r\n                        <div className=\"circle2\" />\r\n                        <p className=\"login__side-left-title\">Welcome To Back</p>\r\n                        <p className=\"login__side-left-text\">\r\n                            Welcome, Login to your account to continue.\r\n                            Remember, it’s more than just trading Bitcoin\r\n                            and Gift Cards  experience\r\n                            world class transaction processes.\r\n                        </p>\r\n                        <Link to=\"sign-up\" className=\"login__side-left-button\"> Sign Up</Link>\r\n                        {/* <button ></button> */}\r\n                    </div>\r\n                    <div className=\"login__side-right\">\r\n                        <div className=\"login__side-right-image\">\r\n                            <WelcomeSvg />\r\n                        </div>\r\n                        <div className=\"login__side-right-title\">Create Account</div>\r\n                        <p className=\"login__side-right-message\">\r\n                            {this.state.message ? `${this.state.message}` : null}\r\n                            <br />\r\n                            {this.state.message ? `${this.state.messageDetails}` : null}\r\n                        </p>\r\n                        <FormValidator buttonText={this.state.isLoading ? \"loading...\" : \"Submit\"} buttonClass=\"login__side-right-summit\"\r\n                            classname=\" login__side-right-container \"\r\n                            data={this.state} rules={this.rules}\r\n                            submit={this.submit}>\r\n                            <div className=\"login__side-right-form\">\r\n                                <StyledInput name=\"email\" handleChange={this.updateFormValue} value={this.state.email}\r\n                                    placeHolder=\"Email\" type=\"email\" icon={envelope} />\r\n                                <ValidationMessage field=\"email\" />\r\n\r\n                                <StyledInput name=\"password\" handleChange={this.updateFormValue}\r\n                                    value={this.state.password}\r\n                                    placeHolder=\"Password\" type=\"password\" icon={lock} />\r\n                                <ValidationMessage field=\"password\" />\r\n                            </div>\r\n                            <p className=\"login__side-right-isSugnedIn\">\r\n                                Don't have an account?\r\n                            <Link to=\"sign-up\" className=\"login__side-right-isSugnedIn-action\"> Sign Up</Link>\r\n                                <br />\r\n                            Forgot password?\r\n                            <span className=\"login__side-right-isSugnedIn-action\"\r\n                                    onClick={() => this.setState({ isActive: !false, })}> Reset</span>\r\n\r\n                                <br /> <br />\r\n                                <span className=\"login__side-right-isSugnedIn-action-red\"> * </span>\r\n                                By clicking the \"Open Account\" button I confirm the agreement with the terms and conditions.\r\n                            </p>\r\n                            {/* <button className=\"login__side-right-summit\">Login</button> */}\r\n                        </FormValidator>\r\n                        <Modal isActive={this.state.isActive}>\r\n                            <FormValidator buttonClass=\"login__side-right-summit\"\r\n                                classname=\" login__side-right-container-modal \"\r\n                                data={this.state} rules={this.modalRule}\r\n                                submit={this.resetEmail}>\r\n                                <span onClick={() => this.setState({isActive: false})}>X</span>\r\n                                <div className=\"login__side-right-container-modal-form\">\r\n                                    <StyledInput name=\"resetEmail\" handleChange={this.updateResetValue}\r\n                                        value={this.state.resetEmail}\r\n                                        placeHolder=\"Enter Email\" type=\"email\" icon={lock} />\r\n                                    <ValidationMessage field=\"resetEmail\" />\r\n                                </div>\r\n                                <p className=\"rate-isSugnedIn\">\r\n                                    Enter your email and a new password will be sent to your email address.\r\n\t\t\t\t\t\t        </p>\r\n                            </FormValidator>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ users }) => ({\r\n    users: users\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    fetchUserInfo: fetchUserInfoActionCreator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n"],"sourceRoot":""}