{"version":3,"sources":["pages/admin/transaction/transaction.jsx"],"names":["Container","styled","div","props","theme","colorLight","AdminTransaction","useState","history","setHistory","useEffect","auth_token","JSON","parse","localStorage","getItem","user","id","Axios","post","routes","api","userTransactions","then","res","data","status","console","log","Object","values","sort","a","b","Date","getTime","created_at","catch","err","columns","Header","accessor","collapse","rowInfo","toDateString","render","className","tableColumns"],"mappings":"4sBAOA,IAAMA,EAAYC,IAAOC,IAAV,KAMG,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,cAmGxBC,UAjFf,WAA6B,IAAD,EACMC,mBAAS,IADf,mBACjBC,EADiB,KACRC,EADQ,KAExBC,qBAAU,WACF,IAAMC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,aAAaC,KAAKL,WAC/DM,EAAKL,KAAKC,MAAMC,aAAaC,QAAQ,aAAaC,KAAKC,GAiB7D,OAfAC,IAAMC,KAAN,UAAcC,IAAOC,IAAIC,iBAAzB,kBAAmDX,GAAc,CAACM,OAC7DM,MAAK,SAAAC,GAEsB,YAApBA,EAAIC,KAAKC,SACTC,QAAQC,IAAIC,OAAOC,OAAON,EAAIC,KAAKA,MAAMM,MAAK,SAACC,EAAEC,GAAH,OAAS,IAAIC,MAAOC,QAAQH,EAAEI,aAC1E,IAAIF,MAAOC,QAAQF,EAAEG,gBAEvB3B,EAAWoB,OAAOC,OAAON,EAAIC,KAAKA,WAIzCY,OAAO,SAAAC,GACJX,QAAQC,IAAIU,MAGb,eAIZ,IACH,IAAMC,EAAU,CACZ,CACEC,OAAQ,aACRD,QAAS,CACP,CACEC,OAAQ,aACRC,SAAU,aACVC,UAAU,GAEZ,CACEF,OAAQ,SACRC,SAAU,SACVC,UAAU,GAEZ,CACEF,OAAQ,QACRC,SAAU,SAEZ,CACID,OAAQ,aACRC,SAAU,SAACE,GACP,OACE,8BACE,IAAIT,KAAKS,EAAQP,YAAYQ,gBAAkB,SAIvDC,OAAQ,SAACF,GACP,OACE,2CAehB,OACI,kBAAC3C,EAAD,KACI,yBAAK8C,UAAU,QAGX,kBAAC,IAAD,CAAgBC,aAAcR,EAASd,KAAMjB,GAAoB","file":"static/js/16.c3f3a52c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\n// import rateImage from \"../../../images/transcation.png\"\r\nimport Axios from 'axios'\r\nimport routes from '../../../navigation/routes'\r\nimport PaginatedTable from '../../../components/table/tablePagination'\r\n\r\nconst Container = styled.div`\r\n    grid-column: 2/-1;\r\n    display: grid;\r\n    min-height: 100vh;\r\n    min-width: 100%;\r\n    place-items: center;\r\n    background: ${props => props.theme.colorLight};\r\n    border-radius: 2rem 0 0 2rem;\r\n    z-index: 30;\r\n    .rate{\r\n        grid: 1/-1;\r\n        display: grid;\r\n        width: 100%;\r\n        padding: 3rem;\r\n        align-items: flex-start;\r\n        place-items: center;\r\n\r\n        img{\r\n            height: 78vh;\r\n            width: 100%;        \r\n        }\r\n\r\n    }\r\n`\r\nfunction AdminTransaction() {\r\n    const [history, setHistory] = useState([])\r\n    useEffect(() => {\r\n            const auth_token = JSON.parse(localStorage.getItem(\"userInfo\")).user.auth_token\r\n            const id = JSON.parse(localStorage.getItem(\"userInfo\")).user.id\r\n        \r\n            Axios.post(`${routes.api.userTransactions}?token=${auth_token}`, {id})\r\n                .then(res => {\r\n                    // console.log(res.data.data);\r\n                    if (res.data.status === \"success\") {\r\n                        console.log(Object.values(res.data.data).sort((a,b) => new Date().getTime(a.created_at)  \r\n                        - new Date().getTime(b.created_at)))\r\n\r\n                        setHistory(Object.values(res.data.data))\r\n                    }\r\n                    return\r\n                })\r\n                .catch( err => {\r\n                    console.log(err);\r\n                })\r\n    \r\n            return () => {\r\n    \r\n            }\r\n       \r\n    }, [])\r\n    const columns = [\r\n        {\r\n          Header: 'Coin Rates',\r\n          columns: [\r\n            {\r\n              Header: 'Trans Type',\r\n              accessor: 'trans_type',\r\n              collapse: true,\r\n            },\r\n            {\r\n              Header: 'Status',\r\n              accessor: 'status',\r\n              collapse: true,\r\n            },\r\n            {\r\n              Header: 'Email',\r\n              accessor: 'email',\r\n            },\r\n            {\r\n                Header: 'Created At', \r\n                accessor: (rowInfo) => {\r\n                    return (\r\n                      <span>\r\n                       {new Date(rowInfo.created_at).toDateString() || \"none\"}\r\n                      </span>\r\n                    )\r\n                  },\r\n                render: (rowInfo) => {\r\n                  return (\r\n                    <span>\r\n                    ddsd\r\n                     {/* {new Date(rowInfo.created_at).toDateString()} */}\r\n                    </span>\r\n                  )\r\n                }\r\n              },\r\n            // {\r\n            //   Header: 'Created At',\r\n            //   accessor: 'created_at',\r\n            //   collapse: true,\r\n            // },\r\n          ],\r\n        },\r\n      ]\r\n    return (\r\n        <Container>\r\n            <div className=\"rate\">\r\n                {/* <img src={rateImage} alt=\"rate\"/> */}\r\n\r\n                <PaginatedTable tableColumns={columns} data={history ? history : []} />\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminTransaction\r\n"],"sourceRoot":""}