{"version":3,"sources":["pages/masterAdmin/depositRequest/depositRequest.jsx"],"names":["Container","styled","div","props","theme","colorLight","breakPoints","bpSmall2","colorPrimary","mapDispatchToProps","fetchAllDeposits","fetchAllDepositActionCreator","connect","allDeposits","deposits","useState","fetchedDeposits","setFetchedDeposits","popUpMessage","setPopUpMessage","showpopUpMessage","setShowPopUpMessage","hasError","setHasError","useEffect","auth_token","JSON","parse","localStorage","getItem","user","console","log","Axios","get","routes","api","adminDeposits","then","response","data","res","catch","error","columns","Header","accessor","rowInfo","coin_address","render","value","map","coinAddress","id","Cell","row","className","onClick","e","acceptDeposit","original","amount","slug","user_id","status","deleteRequest","post","adminDeleteDeposit","action","adminAcceptDeposit","color","expandedComponent","style","fontSize","height","width","display","overflow","Object","values","images","photo","i","key","src","alt","handleVerifyClick","tableColumns"],"mappings":"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","file":"static/js/23.a5664262.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n// import rateImage from \"../../../images/rate.png\"\r\n// import Table from './table'\r\nimport Table from '../../../components/table/tablePagination'\r\nimport { connect } from 'react-redux'\r\nimport { useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport { useState } from 'react'\r\nimport routes from '../../../navigation/routes'\r\nimport { StyledButton, PopUpMessage } from '../../../components'\r\nimport { fetchAllDepositActionCreator } from '../../../reduxStore'\r\n\r\n\r\nconst Container = styled.div`\r\n    grid-column: 2/-1;\r\n    display: grid;\r\n    min-height: 100%;\r\n    min-width: 100%;\r\n    align-items: flex-start;\r\n    background: ${props => props.theme.colorLight};\r\n    border-radius: 2rem 0 0 2rem;\r\n    z-index: 30;\r\n    .rate{\r\n\t\tgrid-column: 1/-1;\r\n\t\tdisplay: grid;\r\n\t\twidth: 100%;\r\n\t\tpadding: 3rem;\r\n\t\t/* place-items: center; */\r\n\t\tjustify-items: center;\r\n\t\talign-items: space-around;\r\n\t\tjustify-self: flex-start;\r\n\t\tposition: relative;\r\n\t\t@media only screen and (max-width: ${props => props.theme.breakPoints.bpSmall2}) {\r\n\t\t\tpadding: 3rem 0;\r\n\t\t}\r\n\t\t\r\n      &__title{   \r\n        justify-self: flex-start;\r\n        font-weight: 500;\r\n        color: ${props => props.theme.colorPrimary};\r\n        font-family: ProximaNovaSoftW03-Regular;\r\n        position: relative;\r\n\r\n        &::after{\r\n          content: '';\r\n          position: absolute;\r\n          width: 120%;\r\n          height: .4rem;\r\n          bottom: 0;\r\n          left: 0;\r\n          background: ${props => props.theme.colorPrimary};\r\n        }\r\n      }\r\n    }\r\n    img{\r\n      /* height: 100%; */\r\n      width: 80%;        \r\n    }\r\n\r\n    \r\n`\r\nfunction AdminDepositRequest({ allDeposits, fetchAllDeposits }) {\r\n\t// const [token, setToken] = useState([])\r\n\tconst [fetchedDeposits, setFetchedDeposits] = useState(false)\r\n\tconst [popUpMessage, setPopUpMessage] = useState(null)\r\n\tconst [showpopUpMessage, setShowPopUpMessage] = useState(false)\r\n\tconst [hasError, setHasError] = useState(false)\r\n\r\n\r\n\t// let authToken\r\n\r\n\tuseEffect(() => {\r\n\t\tconst auth_token = JSON.parse(localStorage.getItem(\"userInfo\")).user.auth_token\r\n\t\tconsole.log(auth_token);\r\n\r\n\t\tAxios.get(`${routes.api.adminDeposits}?token=${auth_token}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response.data.data);\r\n\r\n\t\t\t\tfetchAllDeposits(response.data.data)\r\n\t\t\t\treturn response.data;\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetFetchedDeposits(true)\r\n\t\t\t\t// console.log(allDeposits)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\t// alert(`An Error Occured! ${error}`);\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\r\n\t}, [fetchAllDeposits])\r\n\tconst columns = [\r\n\t\t// {\r\n\t\t// \t// Make an expander cell\r\n\t\t// \tHeader: () => null, // No header\r\n\t\t// \tid: 'expander', // It needs an ID\r\n\t\t// \tCell: ({ row }) => (\r\n\t\t// \t  // Use Cell to render an expander for each row.\r\n\t\t// \t  // We can use the getToggleRowExpandedProps prop-getter\r\n\t\t// \t  // to build the expander.\r\n\t\t// \t  <span {...row.getToggleRowExpandedProps()}>\r\n\t\t// \t\t{row.isExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}\r\n\t\t// \t  </span>\r\n\t\t// \t),\r\n\t\t//   },\r\n\t\t{\r\n\t\t\tHeader: 'Unverified Users',\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Amount',\r\n\t\t\t\t\taccessor: 'amount',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Email',\r\n\t\t\t\t\taccessor: 'email',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Coin Address',\r\n\t\t\t\t\taccessor: (rowInfo) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{rowInfo?.user?.coin_address || \"none\"}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t},\r\n\t\t\t\t\trender: (rowInfo) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{rowInfo.value.map(coinAddress => (<span>{console.log(coinAddress.user)}</span>))}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Status',\r\n\t\t\t\t\taccessor: 'status',\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Transaction Id',\r\n\t\t\t\t\taccessor: 'slug',\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\t// Make an expander cell\r\n\t\t\tHeader: () => null, // No header\r\n\t\t\tid: 'action', // It needs an ID\r\n\t\t\tCell: ({ row }) => (\r\n\t\t\t\t// Use Cell to render an expander for each row.\r\n\t\t\t\t// We can use the getToggleRowExpandedProps prop-getter\r\n\t\t\t\t// to build the expander.\r\n\r\n\t\t\t\t<div className=\"options_btn\">\r\n\t\t\t\t\t<StyledButton onClick={(e) => acceptDeposit(row.original.amount,\r\n\t\t\t\t\t\trow.original.id,\r\n\t\t\t\t\t\trow.original.slug,\r\n\t\t\t\t\t\trow.original.user_id,\r\n\t\t\t\t\t\trow.original.status)}>\r\n\t\t\t\t\t\tAccept\r\n\t\t\t  \t\t</StyledButton>\r\n\r\n\t\t\t\t\t<StyledButton onClick={(e) => deleteRequest(row.original.id)}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</StyledButton>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t),\r\n\t\t},\r\n\t]\r\n\r\n\tconst deleteRequest = (id) => {\r\n\t\t// console.log(user_id);\r\n\t\tconst auth_token = JSON.parse(localStorage.getItem(\"userInfo\")).user.auth_token\r\n\r\n\t\tAxios.post(`${routes.api.adminDeleteDeposit}?token=${auth_token}`, { id: id, action: \"delete\" })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetShowPopUpMessage(false)\r\n\t\t\t\tif (res.data.status === \"success\") {\r\n\t\t\t\t\tsetPopUpMessage(res.data.data[0])\r\n\t\t\t\t}\r\n\t\t\t\treturn res.data.data[1];\r\n\t\t\t\t// console.log(res.data);\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetShowPopUpMessage(true)\r\n\t\t\t\tfetchAllDeposits(res)\r\n\t\t\t})\r\n\t\t\t.catch(res => {\r\n\t\t\t\tsetPopUpMessage(res.data.data)\r\n\t\t\t\tsetShowPopUpMessage(true)\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst expandedComponent = (row) => (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tfontSize: '10px',\r\n\t\t\t\theight: \"20rem\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\tdisplay: \"grid\",\r\n\t\t\t\t\"gridTemplateColumns\": \"1fr 1fr 1fr\",\r\n\t\t\t\toverflow: \"hidden\"\r\n\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{/* <code>{JSON.stringify({ values: row.values.images }, null, 2)}</code> */}\r\n\t\t\t{Object.values(JSON.parse(row.values.images)).map((photo, i) => (\r\n\t\t\t\t<img key={i} src={`http://localhost:8000/images/${photo}`} alt=\"acceptDeposit info\" />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n\tconst acceptDeposit = (amount, id, slug, user_id, status) => {\r\n\t\t// console.log();\r\n\t\tconst auth_token = JSON.parse(localStorage.getItem(\"userInfo\")).user.auth_token\r\n\t\tconst data = {\r\n\t\t\tamount: amount,\r\n\t\t\tid: id,\r\n\t\t\tslug: slug,\r\n\t\t\tuser_id: user_id,\r\n\t\t\tstatus: status\r\n\t\t}\r\n\t\tconsole.log(data);\r\n\t\tAxios.post(`${routes.api.adminAcceptDeposit}?token=${auth_token}`, data)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetShowPopUpMessage(false)\r\n\t\t\t\tif (res.data.status === \"success\") {\r\n\t\t\t\t\tsetHasError(false)\r\n\t\t\t\t\tsetPopUpMessage(res.data.data[0])\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetPopUpMessage(res.data.data)\r\n\t\t\t\t\tsetHasError(true)\r\n\t\t\t\t}\r\n\t\t\t\treturn res.data.data[1];\r\n\t\t\t\t// console.log(res.data);\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetShowPopUpMessage(true)\r\n\t\t\t\tfetchAllDeposits(res)\r\n\t\t\t})\r\n\t\t// .catch(res => {\r\n\t\t// \tsetPopUpMessage(res.data.data)\r\n\t\t// \tsetShowPopUpMessage(true)\r\n\t\t// })\r\n\t}\r\n\treturn (\r\n\t\t<Container color=\"\">\r\n\t\t\t<div className=\"rate\">\r\n\t\t\t\t{showpopUpMessage ? <PopUpMessage error={hasError}> {popUpMessage} <span onClick={() => setShowPopUpMessage(false)}>âœ–</span> </PopUpMessage> : null}\r\n\t\t\t\t<h1 className=\"rate__title\">Deposit Requests</h1>\r\n\t\t\t\t{fetchedDeposits ? <Table data={allDeposits.deposits || []} expandedComponent={expandedComponent} handleVerifyClick={acceptDeposit} tableColumns={columns} /> : null}\r\n\t\t\t\t{/* <Table tableColumns={columns} /> */}\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ deposits }) => ({\r\n\tallDeposits: deposits\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\tfetchAllDeposits: fetchAllDepositActionCreator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminDepositRequest)\r\n"],"sourceRoot":""}