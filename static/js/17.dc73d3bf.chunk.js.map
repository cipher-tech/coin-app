{"version":3,"sources":["pages/admin/transaction/transaction.jsx"],"names":["Container","styled","div","props","theme","colorLight","colorPrimary","font","Xlarge","AdminTransaction","useState","history","setHistory","useEffect","auth_token","Storage","get","user","id","Axios","post","routes","api","userTransactions","then","res","data","status","Object","values","catch","err","columns","Header","accessor","collapse","rowInfo","Date","created_at","toDateString","render","Tarnsction_columns","className","tableColumns","filter","item","trans_type"],"mappings":"g1BAOA,IAAMA,EAAYC,IAAOC,IAAV,KAMG,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,cAY3B,SAAAF,GAAK,OAAIA,EAAMC,MAAME,gBAChB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,KAAKC,UA2J5BC,UAhJf,WAA6B,IAAD,EACGC,mBAAS,IADZ,mBACpBC,EADoB,KACXC,EADW,KAE3BC,qBAAU,WACT,IAAMC,EAAaC,IAAQC,IAAI,YAAYC,KAAKH,WAC1CI,EAAKH,IAAQC,IAAI,YAAYC,KAAKC,GAexC,OAdAC,IAAMC,KAAN,UAAcC,IAAOC,IAAIC,iBAAzB,kBAAmDT,GAAc,CAAEI,OACjEM,MAAK,SAAAC,GAEmB,YAApBA,EAAIC,KAAKC,QAGZf,EAAWgB,OAAOC,OAAOJ,EAAIC,KAAKA,UAInCI,OAAM,SAAAC,OAID,eAIL,IACH,IAAMC,EAAU,CACf,CACCC,OAAQ,qBACRD,QAAS,CACR,CACCC,OAAQ,KACRC,SAAU,OACVC,UAAU,GAEX,CACCF,OAAQ,SACRC,SAAU,SACVC,UAAU,GAEX,CACCF,OAAQ,aACRC,SAAU,aACVC,UAAU,GAEX,CACCF,OAAQ,SACRC,SAAU,SACVC,UAAU,GAGX,CACCF,OAAQ,QACRC,SAAU,SAEX,CACCD,OAAQ,aACRC,SAAU,SAACE,GACV,OACC,8BACE,IAAIC,KAAKD,EAAQE,YAAYC,gBAAkB,SAInDC,OAAQ,SAACJ,GACR,OACC,2CAUAK,EAAqB,CAC1B,CACCR,OAAQ,gCACRD,QAAS,CACR,CACCC,OAAQ,KACRC,SAAU,eACVC,UAAU,GAEX,CACCF,OAAQ,SACRC,SAAU,SACVC,UAAU,GAEX,CACCF,OAAQ,OACRC,SAAU,OACVC,UAAU,GAEX,CACCF,OAAQ,SACRC,SAAU,SACVC,UAAU,GAEX,CACCF,OAAQ,kBACRC,SAAU,kBACVC,UAAU,GAEX,CACCF,OAAQ,SACRC,SAAU,SACVC,UAAU,GAEX,CACCF,OAAQ,aACRC,SAAU,SAACE,GACV,OACC,8BACE,IAAIC,KAAKD,EAAQE,YAAYC,gBAAkB,SAInDC,OAAQ,SAACJ,GACR,OACC,2CAUN,OACC,kBAACpC,EAAD,KACC,yBAAK0C,UAAU,QAEd,wBAAIA,UAAU,eAAd,yBACA,kBAAC,IAAD,CAAgBC,aAAcX,EAASN,KAAMf,EAAUiB,OAAOC,OAAOlB,GAASiC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,cAAc,KAEhH,wBAAIJ,UAAU,eAAd,iCACA,kBAAC,IAAD,CAAgBC,aAAcF,EAAoBf,KAAMf,EAAUiB,OAAOC,OAAOlB,GAASiC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,cAAc","file":"static/js/17.dc73d3bf.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Axios from 'axios'\r\nimport routes from '../../../navigation/routes'\r\nimport PaginatedTable from '../../../components/table/tablePagination'\r\nimport { Storage } from '../../../components'\r\n\r\nconst Container = styled.div`\r\n    grid-column: 2/-1;\r\n    display: grid;\r\n    min-height: 100vh;\r\n    min-width: 100%;\r\n    place-items: center;\r\n    background: ${props => props.theme.colorLight};\r\n    border-radius: 2rem 0 0 2rem;\r\n    z-index: 30;\r\n    .rate{\r\n        grid: 1/-1;\r\n        display: grid;\r\n        width: 100%;\r\n        padding: 3rem;\r\n        align-items: flex-start;\r\n        place-items: center;\r\n\r\n\t\t&__title{\r\n\t\t\tcolor: ${props => props.theme.colorPrimary};\r\n\t\t\tfont-size:  ${props => props.theme.font.Xlarge};\r\n\t\t\tpadding: 2rem 2rem;\r\n\t\t\tjustify-self: flex-start;\r\n\t\t}\r\n        img{\r\n            height: 78vh;\r\n            width: 100%;        \r\n        }\r\n\r\n    }\r\n`\r\nfunction AdminTransaction() {\r\n\tconst [history, setHistory] = useState([])\r\n\tuseEffect(() => {\r\n\t\tconst auth_token = Storage.get(\"userInfo\").user.auth_token\r\n\t\tconst id = Storage.get(\"userInfo\").user.id\r\n\t\tAxios.post(`${routes.api.userTransactions}?token=${auth_token}`, { id })\r\n\t\t\t.then(res => {\r\n\t\t\t\t// console.log(res.data.data);\r\n\t\t\t\tif (res.data.status === \"success\") {\r\n\t\t\t\t\t// console.log(Object.values(res.data.data).filter(item => item.trans_type))\r\n\t\t\t\t\t// console.log(Object.values(res.data.data).filter(item => !item.trans_type))\r\n\t\t\t\t\tsetHistory(Object.values(res.data.data))\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t})\r\n\r\n\t\treturn () => {\r\n\r\n\t\t}\r\n\r\n\t}, [])\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tHeader: 'Deposits/Withdrawl',\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Id',\r\n\t\t\t\t\taccessor: 'slug',\r\n\t\t\t\t\tcollapse: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Amount',\r\n\t\t\t\t\taccessor: 'amount',\r\n\t\t\t\t\tcollapse: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Trans Type',\r\n\t\t\t\t\taccessor: 'trans_type',\r\n\t\t\t\t\tcollapse: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Status',\r\n\t\t\t\t\taccessor: 'status',\r\n\t\t\t\t\tcollapse: true,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Email',\r\n\t\t\t\t\taccessor: 'email',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Created At',\r\n\t\t\t\t\taccessor: (rowInfo) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{new Date(rowInfo.created_at).toDateString() || \"none\"}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t},\r\n\t\t\t\t\trender: (rowInfo) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\tddsd\r\n\t\t\t\t\t\t\t\t{/* {new Date(rowInfo.created_at).toDateString()} */}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t]\r\n\tconst Tarnsction_columns = [\r\n\t\t{\r\n\t\t\tHeader: 'Coin and GiftCard Transcation',\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Id',\r\n\t\t\t\t\taccessor: 'reference_id',\r\n\t\t\t\t\tcollapse: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Amount',\r\n\t\t\t\t\taccessor: 'amount',\r\n\t\t\t\t\tcollapse: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Type',\r\n\t\t\t\t\taccessor: 'type',\r\n\t\t\t\t\tcollapse: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Action',\r\n\t\t\t\t\taccessor: 'action',\r\n\t\t\t\t\tcollapse: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Mode_Of_Payment',\r\n\t\t\t\t\taccessor: 'mode_of_payment',\r\n\t\t\t\t\tcollapse: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Status',\r\n\t\t\t\t\taccessor: 'status',\r\n\t\t\t\t\tcollapse: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Created At',\r\n\t\t\t\t\taccessor: (rowInfo) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{new Date(rowInfo.created_at).toDateString() || \"none\"}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t},\r\n\t\t\t\t\trender: (rowInfo) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\tddsd\r\n\t\t\t\t\t\t\t\t{/* {new Date(rowInfo.created_at).toDateString()} */}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t]\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<div className=\"rate\">\r\n\t\t\t\t{/* <img src={rateImage} alt=\"rate\"/> */}\r\n\t\t\t\t<h1 className=\"rate__title\">Deposits / Withdrawl </h1>\r\n\t\t\t\t<PaginatedTable tableColumns={columns} data={history ? Object.values(history).filter(item => item.trans_type) : []} />\r\n\r\n\t\t\t\t<h1 className=\"rate__title\">Coin and GiftCard Transcation</h1>\r\n\t\t\t\t<PaginatedTable tableColumns={Tarnsction_columns} data={history ? Object.values(history).filter(item => !item.trans_type) : []} />\r\n\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default AdminTransaction\r\n"],"sourceRoot":""}