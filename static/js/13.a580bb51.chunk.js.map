{"version":3,"sources":["context/contextProvider.js"],"names":["ContextProvider","props","selectRegions","name","localStorage","region","regions","JSON","stringify","setState","state","contextData","country","IsRegionSelected","window","location","reload","toggleLoginSignUp","auth","showLogin","showSignUp","nigeria","id","code","currency","symbol","paymentMethods","type","ghana","cameroon","parse","changeRegion","this","Provider","value","children","Component","withRouter"],"mappings":"yNAKMA,E,kDACF,WAAYC,GAAQ,IAAD,kCACf,cAAMA,IA8FVC,cAAgB,SAACC,GACbC,aAAaC,OAAS,EAAKC,QAAQH,GAAQI,KAAKC,UAAU,EAAKF,QAAQH,IAAS,KAChF,EAAKM,UAAS,SAACC,EAAOT,GAAW,IAAD,EAC5B,MAAO,CACHU,YAAY,2BACL,EAAKD,MAAMC,aADP,IAEPC,SAAqB,QAAZ,EAAAR,oBAAA,eAAcC,QAAS,EAAKC,QAAQH,GAAQ,KACrDU,kBAAkB,QAK9BC,OAAOC,SAASC,QAAO,IA3GR,EA+GnBC,kBAAoB,SAACd,GACJ,UAATA,EACA,EAAKM,UAAS,SAACC,EAAOT,GAClB,MAAO,CACPU,YAAY,2BACL,EAAKD,MAAMC,aADP,IAEPO,KAAK,2BACE,EAAKR,MAAMC,YAAYO,MAD1B,IAEAC,WAAW,EACXC,YAAY,UAKR,WAATjB,EACP,EAAKM,UAAS,SAACC,EAAOT,GAAR,MAAmB,CAC7BU,YAAY,2BACL,EAAKD,MAAMC,aADP,IAEPO,KAAK,2BACE,EAAKR,MAAMC,YAAYO,MAD1B,IAEAC,WAAW,EACXC,YAAY,UAKT,UAATjB,GACN,EAAKM,UAAS,SAACC,EAAOT,GAAR,MAAmB,CAC7BU,YAAY,2BACL,EAAKD,MAAMC,aADP,IAEPO,KAAK,2BACE,EAAKR,MAAMC,YAAYO,MAD1B,IAEAC,WAAW,EACXC,YAAY,WA9I5B,EAAKd,QAAU,CACXe,QAAS,CACLC,GAAI,UACJC,KAAM,MACNC,SAAU,QACVC,OAAQ,SACRC,eAAgB,CACZ,CACIvB,KAAM,mBACNwB,KAAM,WAEV,CACIxB,KAAM,cACNwB,KAAM,QAEV,CACIxB,KAAM,mBACNwB,KAAM,UAIlBC,MAAO,CACHN,GAAI,QACJC,KAAM,MACNC,SAAU,OACVC,OAAQ,OACRC,eAAgB,CACZ,CACIvB,KAAM,mBACNwB,KAAM,WAEV,CACIxB,KAAM,cACNwB,KAAM,QAEV,CACIxB,KAAM,mBACNwB,KAAM,UAIlBE,SAAU,CACNP,GAAI,WACJC,KAAM,MACNC,SAAU,QACVC,OAAQ,SACRC,eAAgB,CACZ,CACIvB,KAAM,YACNwB,KAAM,WAEV,CACIxB,KAAM,gBACNwB,KAAM,QAEV,CACIxB,KAAM,MACNwB,KAAM,WAOtB,EAAKjB,MAAQ,CACTC,YAAa,CACTC,QAAS,EAAKN,QAAL,UAAaC,KAAKuB,OAAkB,QAAZ,EAAA1B,oBAAA,eAAcC,UAAU,UAAhD,aAAa,EAA2CiB,KAAO,EAAKhB,QAAQe,QACrFU,aAAc,EAAK7B,cACnBW,kBAAkB,EAClBK,KAAM,CACFD,kBAAmB,EAAKA,kBACxBE,WAAW,EACXC,YAAY,KA1ET,E,sMAkFTY,KAAKvB,UAAS,SAACC,EAAOT,GAAW,IAAD,IAClC,MAAO,CACHU,YAAY,2BACL,EAAKD,MAAMC,aADP,IAEPC,QAASL,KAAKuB,OAAkB,QAAZ,EAAA1B,oBAAA,eAAcC,UAAU,GAAS,EAAKC,QAAQC,KAAKuB,OAAkB,QAAZ,EAAA1B,oBAAA,eAAcC,UAAU,GAAOiB,IAAM,EAAKhB,QAAQe,QAC/HR,kBAAkB,Q,qIAkE9B,OACI,oCACI,kBAAC,IAAYoB,SAAb,CAAsBC,MAAOF,KAAKtB,MAAMC,aACnCqB,KAAK/B,MAAMkC,e,GA7JFC,aAqKfC,sBAAWrC","file":"static/js/13.a580bb51.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { ContextData } from './contextData'\r\nimport { withRouter } from 'react-router-dom'\r\n// import { Redirect } from 'react-router-dom'\r\n\r\nclass ContextProvider extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.regions = {\r\n            nigeria: {\r\n                id: \"nigeria\",\r\n                code: \"NGN\",\r\n                currency: \"naira\",\r\n                symbol: '₦',\r\n                paymentMethods: [\r\n                    {\r\n                        name: \"MTN MOBILE MONEY\",\r\n                        type: \"digital\"\r\n                    },\r\n                    {\r\n                        name: \"ACCESS BANK\",\r\n                        type: \"bank\",\r\n                    },\r\n                    {\r\n                        name: \"FIDELITY ACCOUNT\",\r\n                        type: \"bank\",\r\n                    }\r\n                ],\r\n            },\r\n            ghana: {\r\n                id: \"ghana\",\r\n                code: \"GHS\",\r\n                currency: \"cedi\",\r\n                symbol: '¢',\r\n                paymentMethods: [\r\n                    {\r\n                        name: \"MTN MOBILE MONEY\",\r\n                        type: \"digital\"\r\n                    },\r\n                    {\r\n                        name: \"ACCESS BANK\",\r\n                        type: \"bank\",\r\n                    },\r\n                    {\r\n                        name: \"FIDELITY ACCOUNT\",\r\n                        type: \"bank\",\r\n                    }\r\n                ],\r\n            },\r\n            cameroon: {\r\n                id: \"cameroon\",\r\n                code: \"XAF\",\r\n                currency: \"franc\",\r\n                symbol: '₣',\r\n                paymentMethods: [\r\n                    {\r\n                        name: \"MTN FLOAT\",\r\n                        type: \"digital\"\r\n                    },\r\n                    {\r\n                        name: \"AFRILAND BANK\",\r\n                        type: \"bank\",\r\n                    },\r\n                    {\r\n                        name: \"UBA\",\r\n                        type: \"bank\",\r\n                    }\r\n\r\n                ],\r\n            }\r\n        }\r\n\r\n        this.state = {\r\n            contextData: {\r\n                country: this.regions[JSON.parse(localStorage?.region || false)?.id] || this.regions.nigeria,\r\n                changeRegion: this.selectRegions,\r\n                IsRegionSelected: false,\r\n                auth: {\r\n                    toggleLoginSignUp: this.toggleLoginSignUp,\r\n                    showLogin: false,\r\n                    showSignUp: false,\r\n                },\r\n            }\r\n        }\r\n    }\r\n    async componentWillMount() {\r\n        // console.log(\"layout\",this.regions[JSON.parse(localStorage.region).id]);\r\n        // console.log(this.regions[JSON.parse(localStorage?.region || false)?.id] || this.regions.nigeria);\r\n        await this.setState((state, props) => {\r\n            return {\r\n                contextData: {\r\n                    ...this.state.contextData,\r\n                    country: JSON.parse(localStorage?.region || false) ? this.regions[JSON.parse(localStorage?.region || false).id] : this.regions.nigeria,\r\n                    IsRegionSelected: true\r\n                }\r\n\r\n            }\r\n        })\r\n        // this.selectRegions(\"nigeria\")\r\n    }\r\n\r\n    selectRegions = (name) => {\r\n        localStorage.region = this.regions[name] ? JSON.stringify(this.regions[name]) : null\r\n        this.setState((state, props) => {\r\n            return {\r\n                contextData: {\r\n                    ...this.state.contextData,\r\n                    country: localStorage?.region ? this.regions[name] : null,\r\n                    IsRegionSelected: true\r\n                }\r\n\r\n            }\r\n        })\r\n        window.location.reload(false);\r\n        // this.props.history.push(this.props.history.location.pathname)\r\n    }\r\n\r\n    toggleLoginSignUp = (name) => {\r\n        if (name === \"login\") {\r\n            this.setState((state, props) => {\r\n                return {\r\n                contextData: {\r\n                    ...this.state.contextData,\r\n                    auth: {\r\n                        ...this.state.contextData.auth,\r\n                        showLogin: true,\r\n                        showSignUp: false,\r\n                    }\r\n                }\r\n                }}\r\n            )\r\n        } else if (name === \"signUp\") {\r\n            this.setState((state, props) => ({\r\n                contextData: {\r\n                    ...this.state.contextData,\r\n                    auth: {\r\n                        ...this.state.contextData.auth,\r\n                        showLogin: false,\r\n                        showSignUp: true,\r\n                    }\r\n                }\r\n                })\r\n            )\r\n        }else if (name === \"close\"){\r\n            this.setState((state, props) => ({\r\n                contextData: {\r\n                    ...this.state.contextData,\r\n                    auth: {\r\n                        ...this.state.contextData.auth,\r\n                        showLogin: false,\r\n                        showSignUp: false,\r\n                    }\r\n                }\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ContextData.Provider value={this.state.contextData}>\r\n                    {this.props.children}\r\n                </ContextData.Provider>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(ContextProvider)"],"sourceRoot":""}