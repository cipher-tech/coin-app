{"version":3,"sources":["pages/admin/widthdrawlRequest/widthdrawlRequest.jsx"],"names":["Container","styled","div","props","theme","colorLight","colorDark","font","large","colorSecondary","colorPrimary","xlarge","medium","connect","user","users","regionContext","useContext","ContextData","useState","widthdrawlValue","setWidthdrawlValue","showpopUpMessage","setShowPopUpMessage","popUpMessage","setPopUpMessage","isLoading","setIsLoading","error","setError","refrenceId","setRefrenceId","isModalActive","setIsModalActive","process","bitcoinAddress","paymentOptions","setPaymentOptions","copy","e","a","navigator","clipboard","writeText","handleSubmit","length","auth_token","Storage","get","userId","id","wallet","wallet_balc","email","status","object","paymentMethod","amount","setTimeout","Axios","post","routes","api","usersWidthdrawl","then","res","data","catch","isActive","className","role","aria-label","onClick","src","qrcode","alt","name","label","updatedValue","handleChange","value","placeHolder","type","icon","envelope","onChange","target","country","paymentMethods","map","item","i","key","field"],"mappings":"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","file":"static/js/18.a015f956.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport envelope from \"../../../images/svgIcons/envelope.svg\"\r\nimport styled from 'styled-components'\r\nimport { StyledInput } from '../../../components/styledComponents'\r\nimport Button from '../../../components/button/button'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport qrcode from \"../../../images/qrcode.png\"\r\n\r\nimport routes from '../../../navigation/routes'\r\nimport { PopUpMessage, Storage, Modal } from '../../../components'\r\nimport { ContextData } from '../../../context/contextData'\r\nimport { ValidationMessage } from '../../../validationMessage'\r\n\r\nconst Container = styled.div`\r\n    grid-column: 2/-1;\r\n    display: grid;\r\n    /* grid-template-columns: 1fr; */\r\n    min-height: 100%;\r\n    min-width: 100%;\r\n    /* grid-auto-rows: 2; */\r\n    /* place-items: center; */\r\n    justify-items: center;\r\n    align-items: flex-start;\r\n    background: ${props => props.theme.colorLight};\r\n    border-radius: 2rem 0 0 2rem;\r\n    z-index: 30;\r\n    position: relative;\r\n    .modal__container{\r\n        place-items: center;\r\n        background: ${props => props.theme.colorLight};\r\n        padding: 2rem 3rem;\r\n        height: max-content;\r\n        align-self: center;\r\n        color: ${props => props.theme.colorDark};\r\n        text-align: center;\r\n        position: relative;\r\n        border-radius: 1rem;\r\n        display: grid;\r\n\r\n        .close{\r\n            justify-self: flex-end;\r\n            cursor: pointer;\r\n        }\r\n        img{\r\n            height: 20rem;\r\n            width: 20rem;\r\n        }\r\n        &--text{\r\n            padding: 1rem;\r\n        }\r\n        &-address{\r\n            font-size: ${props => props.theme.font.large};\r\n            color: ${props => props.theme.colorSecondary};\r\n        }\r\n    }\r\n    .title{   \r\n        justify-self: flex-start;\r\n        font-weight: 500;\r\n        color: ${props => props.theme.colorPrimary};\r\n        font-family: ProximaNovaSoftW03-Regular;\r\n        position: relative;\r\n        margin-top: 8rem;\r\n\r\n        &::after{\r\n          content: '';\r\n          position: absolute;\r\n          width: 120%;\r\n          height: .4rem;\r\n          bottom: 0;\r\n          left: 0;\r\n          background: ${props => props.theme.colorPrimary};\r\n        }\r\n      }  \r\n      .deposit{\r\n        display: grid;\r\n        /* margin-top: 13rem; */\r\n        padding: 2rem ;\r\n        /* display: flex; */\r\n        align-self: center;\r\n        justify-items: center;\r\n        color: ${props => props.theme.colorDark};\r\n        /* height: 1rem; */\r\n        box-shadow: .2rem .4rem 10px rgba(0,0,0, .3),\r\n            -0.2rem -0.4rem 20px rgba(255,255,255, .3);\r\n        \r\n        &-header{\r\n            font-weight: 600;\r\n            font-size: ${props => props.theme.font.xlarge};\r\n            color: ${props => props.theme.colorPrimary};\r\n            justify-self: flex-start;\r\n            padding: 2rem;\r\n        }\r\n        &-form{\r\n            display: grid;\r\n            width: 90%;\r\n            justify-items: center;\r\n            \r\n            &__wrapper{\r\n                justify-items: initial;\r\n            }\r\n        }\r\n        .paymentOptions{\r\n            padding: 1rem 2rem;\r\n                margin: 1rem;\r\n                box-shadow: -0.2rem -0.4rem 20px rgba(255,255,255, .3),\r\n                    .2rem .4rem 10px rgba(0,0,0, .3);\r\n                background: none;\r\n                border-radius: .4rem;  \r\n                border: none;  \r\n                font-size: ${props => props.theme.font.medium};\r\n                color: ${props => props.theme.colorSecondary};\r\n                /* &:hover{\r\n                } */\r\n                &:focus{\r\n                    outline: none;\r\n                    /* color: ${props => props.theme.colorSecondary}; */\r\n                }\r\n        }\r\n        .summit{\r\n            margin: 0 2rem;\r\n        }\r\n    }\r\n`\r\nfunction WidthdrawlRequest(props) {\r\n    const regionContext = useContext(ContextData)\r\n\r\n    const [widthdrawlValue, setWidthdrawlValue] = useState(\"\")\r\n    const [showpopUpMessage, setShowPopUpMessage] = useState(false)\r\n    const [popUpMessage, setPopUpMessage] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(false)\r\n    const [refrenceId, setRefrenceId] = useState(\"\")\r\n    const [isModalActive, setIsModalActive] = useState(false)\r\n    const [bitcoinAddress] = useState(process.env.REACT_APP_WALLET_ADDRESS)\r\n    const [paymentOptions, setPaymentOptions] = useState('bank')\r\n\r\n    const updateFormValue = (name, value) => {\r\n\r\n    }\r\n    async function copy(e) {\r\n        \r\n        if (e === \"refId\" ) {\r\n            navigator.clipboard.writeText(refrenceId)\r\n        }else{\r\n            navigator.clipboard.writeText(bitcoinAddress)\r\n        }\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        await setError(false)\r\n        if(widthdrawlValue.length < 2){\r\n            console.log(\"short\");\r\n            \r\n            setError(!false)\r\n            setPopUpMessage(\"Must be at least 2 digits\")\r\n            setShowPopUpMessage(true)\r\n            return\r\n        }\r\n        const auth_token = Storage.get(\"userInfo\").user.auth_token\r\n        const userId = Storage.get(\"userInfo\").user.id\r\n        const wallet = Storage.get(\"userInfo\").user.wallet_balc\r\n        const email = Storage.get(\"userInfo\").user.email\r\n        const status = Storage.get(\"userInfo\").user.status\r\n        setIsLoading(true)\r\n        const object = {\r\n            id: userId,\r\n            paymentMethod: paymentOptions,\r\n            amount: widthdrawlValue,\r\n            email: email\r\n        }\r\n        // console.log(object);\r\n        if (status === \"verified\") {\r\n            if (widthdrawlValue > wallet) {\r\n                // console.log(widthdrawlValue, wallet);\r\n                \r\n                setError(false)\r\n                setPopUpMessage(\"Amount Greater than wallet balance\")\r\n                setError(true)\r\n                setShowPopUpMessage(true)\r\n                setWidthdrawlValue(0)\r\n\r\n                setTimeout(() => {\r\n                setError(!true)\r\n                setShowPopUpMessage(false)\r\n                setIsLoading(!true)\r\n                }, 8000)\r\n                return\r\n            }\r\n            Axios.post(`${routes.api.usersWidthdrawl}?token=${auth_token}`, object)\r\n                .then(res => {\r\n                    setShowPopUpMessage(false)\r\n                    if (res.data.status === \"success\") {\r\n                        setPopUpMessage(res.data.data[0])\r\n                        setRefrenceId(res.data.data[1])\r\n                        setShowPopUpMessage(true)\r\n                        setIsLoading(!true)\r\n                        setWidthdrawlValue(0)\r\n                        // setIsModalActive(true)\r\n                        // setTimeout(() => {\r\n                        //     props.history.push(routes.admin.index)\r\n                        // }, 8000);\r\n                        return\r\n                    }\r\n                    setPopUpMessage(res.data.data)\r\n                    setError(true)\r\n                    setShowPopUpMessage(true)\r\n                    setIsLoading(!true)\r\n\r\n                })\r\n                .catch(() =>{\r\n                    setPopUpMessage(\"An error occurred please try again or contact customer support\")\r\n                    setError(true)\r\n                    setShowPopUpMessage(true)\r\n                    setIsLoading(false)\r\n                })\r\n        } else {\r\n            setError(true)\r\n            setPopUpMessage(\"You are unverified. Click on the verify link on the menu to verify your account and continue\")\r\n            setShowPopUpMessage(true)\r\n            setTimeout(() => {\r\n                setError(false)\r\n                setShowPopUpMessage(false)\r\n                setIsLoading(!true)\r\n            }, 8500)\r\n\r\n        }\r\n\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n         <Modal isActive={isModalActive}>\r\n                <div className=\"modal__container\">\r\n                    <span role=\"img\" aria-label=\"img\" className=\"close\" onClick={() => setIsModalActive(false)}>\r\n                        ❌\r\n\r\n                        </span>\r\n                    <img src={qrcode} alt=\"\" />\r\n\r\n                    <p className=\"modal__container--text\">\r\n                        please pay exactly ${widthdrawlValue} into this bitcoin address\r\n                    </p>\r\n\r\n                    <p className=\"modal__container-address\">\r\n                        {bitcoinAddress}\r\n                        <button onClick={() =>copy()}> copy</button>\r\n                    </p>\r\n                    <p className=\"modal__container--text\">\r\n                        After successful payment contact customer care with the following refrence Id for confirmation.\r\n\r\n                        <span className=\"modal__container-address\">\r\n                            {refrenceId}\r\n                            <button onClick={() =>copy(\"refId\")}> copy</button>\r\n                        </span> \r\n                        {/* <button onClick={() =>copy()}> copy</button> */}\r\n\r\n                    </p>\r\n                </div>\r\n            </Modal>\r\n            {/* <h1 className=\"title\">Widthdrawl Requests</h1> */}\r\n            {showpopUpMessage ? <PopUpMessage error={error}> {popUpMessage} <span onClick={() => setShowPopUpMessage(false)}>✖</span> </PopUpMessage> : null}\r\n            <div className=\"deposit\">\r\n\r\n                <StyledInput name=\"deposit\" label=\"Enter amount to Widthdrawl\" updatedValue={setWidthdrawlValue}\r\n                    handleChange={updateFormValue} value={widthdrawlValue}\r\n                    placeHolder=\"Enter amount to Widthdrawl\" type=\"number\" icon={envelope} />\r\n\r\n                <br />\r\n\r\n                <select className=\"paymentOptions\" value={paymentOptions} onChange={(e) => setPaymentOptions(e.target.value)} name=\"paymentOptions\">\r\n                            {\r\n                                <>\r\n                                    <option value={\"bank\"}>\r\n                                        Bank transfer\r\n                                    </option>\r\n                                    {\r\n                                        regionContext?.country?.paymentMethods?.map((item, i) => (\r\n                                            <option key={i} value={item.name}>\r\n                                                {item.name}\r\n                                            </option>\r\n                                        ))\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </select>\r\n                        <ValidationMessage field=\"paymentOptions\" />\r\n                <Button className=\"summit\" onClick={handleSubmit}>\r\n                    {isLoading ? \"Loading...\" : \"Submit\"}\r\n                </Button>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ users }) => ({\r\n    user: users\r\n})\r\n\r\nexport default connect(mapStateToProps)(WidthdrawlRequest)"],"sourceRoot":""}