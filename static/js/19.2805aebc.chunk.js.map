{"version":3,"sources":["pages/admin/widthdrawlRequest/widthdrawlRequest.jsx"],"names":["Container","styled","div","props","theme","colorLight","colorPrimary","colorDark","connect","user","users","useState","widthdrawlValue","setWidthdrawlValue","showpopUpMessage","setShowPopUpMessage","popUpMessage","setPopUpMessage","isLoading","setIsLoading","error","setError","onClick","className","name","label","updatedValue","handleChange","value","placeHolder","type","icon","envelope","e","length","console","log","auth_token","JSON","parse","localStorage","getItem","userid","id","wallet","wallet_balc","email","status","object","amount","setTimeout","Axios","post","routes","api","usersWidthdrawl","then","res","data","history","push","admin","index"],"mappings":"q8CAUA,IAAMA,EAAYC,IAAOC,IAAV,KAUG,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,cAOtB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,gBAYd,SAAAH,GAAK,OAAIA,EAAMC,MAAME,gBAS5B,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,aAkHvBC,uBAJS,SAAC,GAAD,MAAgB,CACpCC,KADoB,EAAGC,SAIZF,EAxGf,SAA2BL,GAAQ,IAAD,EACgBQ,mBAAS,IADzB,mBACvBC,EADuB,KACNC,EADM,OAEkBF,oBAAS,GAF3B,mBAEvBG,EAFuB,KAELC,EAFK,OAGUJ,mBAAS,MAHnB,mBAGvBK,EAHuB,KAGTC,EAHS,OAIIN,oBAAS,GAJb,mBAIvBO,EAJuB,KAIZC,EAJY,OAKJR,oBAAS,GALL,mBAKvBS,EALuB,KAKhBC,EALgB,KAgF9B,OACI,kBAACrB,EAAD,KAEKc,EAAmB,kBAAC,IAAD,CAAcM,MAAOA,GAArB,IAA8BJ,EAA9B,IAA4C,0BAAMM,QAAS,kBAAMP,GAAoB,KAAzC,UAA5C,KAAwH,KAC5I,yBAAKQ,UAAU,WAEX,kBAAC,IAAD,CAAaC,KAAK,UAAUC,MAAM,6BAA6BC,aAAcb,EACzEc,aAhFQ,SAACH,EAAMI,KAgFgBA,MAAOhB,EACtCiB,YAAY,6BAA6BC,KAAK,SAASC,KAAMC,MAEjE,6BAEA,kBAAC,IAAD,CAAQT,UAAU,SAASD,QAlFlB,SAACW,GAClB,GAAGrB,EAAgBsB,OAAS,EAMxB,OALAC,QAAQC,IAAI,SAEZf,GAAS,GACTJ,EAAgB,kCAChBF,GAAoB,GAGxB,IAAMsB,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,aAAahC,KAAK4B,WAC/DK,EAASJ,KAAKC,MAAMC,aAAaC,QAAQ,aAAahC,KAAKkC,GAC3DC,EAASN,KAAKC,MAAMC,aAAaC,QAAQ,aAAahC,KAAKoC,YAC3DC,EAAQR,KAAKC,MAAMC,aAAaC,QAAQ,aAAahC,KAAKqC,MAC1DC,EAAST,KAAKC,MAAMC,aAAaC,QAAQ,aAAahC,KAAKsC,OACjE5B,GAAa,GACb,IAAM6B,EAAS,CACXL,GAAID,EACJO,OAAQrC,EACRkC,MAAOA,GAGX,GAAe,aAAXC,EAAuB,CACvB,GAAInC,EAAkBgC,EAclB,OAXAvB,GAAS,GACTJ,EAAgB,sCAChBI,GAAS,GACTN,GAAoB,GACpBF,EAAmB,QAEnBqC,YAAW,WACX7B,GAAS,GACTN,GAAoB,GACpBI,GAAa,KACV,KAGPgC,IAAMC,KAAN,UAAcC,IAAOC,IAAIC,gBAAzB,kBAAkDlB,GAAcW,GAC3DQ,MAAK,SAAAC,GAEF,GADA1C,GAAoB,GACI,YAApB0C,EAAIC,KAAKX,OAQT,OAPA9B,EAAgBwC,EAAIC,KAAKA,MACzB3C,GAAoB,GACpBI,GAAa,GACbN,EAAmB,QACnBqC,YAAW,WACP/C,EAAMwD,QAAQC,KAAKP,IAAOQ,MAAMC,SACjC,KAGP7C,EAAgBwC,EAAIC,KAAKA,MACzBrC,GAAS,GACTN,GAAoB,GACpBI,GAAa,WAIrBE,GAAS,GACTJ,EAAgB,gGAChBF,GAAoB,GACpBmC,YAAW,WACP7B,GAAS,GACTN,GAAoB,GACpBI,GAAa,KACd,QAkBMD,EAAY,aAAe","file":"static/js/19.2805aebc.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport envelope from \"../../../images/svgIcons/envelope.svg\"\r\nimport styled from 'styled-components'\r\nimport { StyledInput } from '../../../components/styledComponents'\r\nimport Button from '../../../components/button/button'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport routes from '../../../navigation/routes'\r\nimport { PopUpMessage } from '../../../components'\r\n\r\nconst Container = styled.div`\r\n    grid-column: 2/-1;\r\n    display: grid;\r\n    /* grid-template-columns: 1fr; */\r\n    min-height: 100%;\r\n    min-width: 100%;\r\n    /* grid-auto-rows: 2; */\r\n    /* place-items: center; */\r\n    justify-items: center;\r\n    align-items: flex-start;\r\n    background: ${props => props.theme.colorLight};\r\n    border-radius: 2rem 0 0 2rem;\r\n    z-index: 30;\r\n    position: relative;\r\n    .title{   \r\n        justify-self: flex-start;\r\n        font-weight: 500;\r\n        color: ${props => props.theme.colorPrimary};\r\n        font-family: ProximaNovaSoftW03-Regular;\r\n        position: relative;\r\n        margin-top: 8rem;\r\n\r\n        &::after{\r\n          content: '';\r\n          position: absolute;\r\n          width: 120%;\r\n          height: .4rem;\r\n          bottom: 0;\r\n          left: 0;\r\n          background: ${props => props.theme.colorPrimary};\r\n        }\r\n      }  \r\n    .deposit{\r\n        /* margin-top: 13rem; */\r\n        padding: 2rem ;\r\n        align-self: center;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        color: ${props => props.theme.colorDark};\r\n        /* height: 1rem; */\r\n        box-shadow: .2rem .4rem 10px rgba(0,0,0, .3),\r\n            -0.2rem -0.4rem 20px rgba(255,255,255, .3);\r\n        \r\n        .summit{\r\n            margin: 0 2rem;\r\n        }\r\n    }\r\n`\r\nfunction WidthdrawlRequest(props) {\r\n    const [widthdrawlValue, setWidthdrawlValue] = useState(\"\")\r\n    const [showpopUpMessage, setShowPopUpMessage] = useState(false)\r\n    const [popUpMessage, setPopUpMessage] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(false)\r\n\r\n    const updateFormValue = (name, value) => {\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        if(widthdrawlValue.length < 2){\r\n            console.log(\"short\");\r\n            \r\n            setError(!false)\r\n            setPopUpMessage(\"Must be at least 2 digits\")\r\n            setShowPopUpMessage(true)\r\n            return\r\n        }\r\n        const auth_token = JSON.parse(localStorage.getItem(\"userInfo\")).user.auth_token\r\n        const userid = JSON.parse(localStorage.getItem(\"userInfo\")).user.id\r\n        const wallet = JSON.parse(localStorage.getItem(\"userInfo\")).user.wallet_balc\r\n        const email = JSON.parse(localStorage.getItem(\"userInfo\")).user.email\r\n        const status = JSON.parse(localStorage.getItem(\"userInfo\")).user.status\r\n        setIsLoading(true)\r\n        const object = {\r\n            id: userid,\r\n            amount: widthdrawlValue,\r\n            email: email\r\n        }\r\n        // console.log(object);\r\n        if (status === \"verified\") {\r\n            if (widthdrawlValue > wallet) {\r\n                // console.log(widthdrawlValue, wallet);\r\n                \r\n                setError(false)\r\n                setPopUpMessage(\"Amount Greater than wallet balance\")\r\n                setError(true)\r\n                setShowPopUpMessage(true)\r\n                setWidthdrawlValue(0)\r\n\r\n                setTimeout(() => {\r\n                setError(!true)\r\n                setShowPopUpMessage(false)\r\n                setIsLoading(!true)\r\n                }, 8000)\r\n                return\r\n            }\r\n            Axios.post(`${routes.api.usersWidthdrawl}?token=${auth_token}`, object)\r\n                .then(res => {\r\n                    setShowPopUpMessage(false)\r\n                    if (res.data.status === \"success\") {\r\n                        setPopUpMessage(res.data.data)\r\n                        setShowPopUpMessage(true)\r\n                        setIsLoading(!true)\r\n                        setWidthdrawlValue(0)\r\n                        setTimeout(() => {\r\n                            props.history.push(routes.admin.index)\r\n                        }, 8000);\r\n                        return\r\n                    }\r\n                    setPopUpMessage(res.data.data)\r\n                    setError(true)\r\n                    setShowPopUpMessage(true)\r\n                    setIsLoading(!true)\r\n\r\n                })\r\n        } else {\r\n            setError(true)\r\n            setPopUpMessage(\"You are unverified. Click on the verify link on the menu to verify your account and continue\")\r\n            setShowPopUpMessage(true)\r\n            setTimeout(() => {\r\n                setError(false)\r\n                setShowPopUpMessage(false)\r\n                setIsLoading(!true)\r\n            }, 8500)\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Container>\r\n            {/* <h1 className=\"title\">Widthdrawl Requests</h1> */}\r\n            {showpopUpMessage ? <PopUpMessage error={error}> {popUpMessage} <span onClick={() => setShowPopUpMessage(false)}>âœ–</span> </PopUpMessage> : null}\r\n            <div className=\"deposit\">\r\n\r\n                <StyledInput name=\"deposit\" label=\"Enter amount to Widthdrawl\" updatedValue={setWidthdrawlValue}\r\n                    handleChange={updateFormValue} value={widthdrawlValue}\r\n                    placeHolder=\"Enter amount to Widthdrawl\" type=\"number\" icon={envelope} />\r\n\r\n                <br />\r\n\r\n                <Button className=\"summit\" onClick={handleSubmit}>\r\n                    {isLoading ? \"Loading...\" : \"Request\"}\r\n                </Button>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ users }) => ({\r\n    user: users\r\n})\r\n\r\nexport default connect(mapStateToProps)(WidthdrawlRequest)"],"sourceRoot":""}