{"version":3,"sources":["images/chattingSvg.svg","pages/userBuySell/userBuySell.jsx"],"names":["module","exports","Container","styled","div","props","theme","colorDark","colorPrimary","colorLight","font","large","colorSecondary","xlarge","UserBuySell","regionContext","useContext","ContextData","useState","isModalActive","setIsModalActive","showCoinOptions","setShowCoinOptions","useEffect","setTimeout","localStorage","counts","switchTab","value","className","title","defaultValue","region","JSON","parse","id","onChange","e","changeRegion","target","name","isActive","role","aria-label","onClick","src","chattingSvg","alt"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,yC,koECU3C,IAAMC,EAAYC,IAAOC,IAAV,KAqBM,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,aAIjB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,gBASxB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,cAI1B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,aAkBb,SAAAF,GAAK,OAAIA,EAAMC,MAAMI,KAAKC,SAG1B,SAAAN,GAAK,OAAIA,EAAMC,MAAMI,KAAKC,SAC9B,SAAAN,GAAK,OAAIA,EAAMC,MAAMM,kBAWjB,SAAAP,GAAK,OAAIA,EAAMC,MAAMI,KAAKG,UAC9B,SAAAR,GAAK,OAAIA,EAAMC,MAAME,gBAMH,SAAAH,GAAK,OAAIA,EAAMC,MAAMM,kBAwE7CE,UApEK,WAChB,IAAMC,EAAgBC,qBAAWC,KADX,EAEoBC,oBAAS,GAF7B,mBAEfC,EAFe,KAEAC,EAFA,OAGwBF,oBAAS,GAHjC,mBAGfG,EAHe,KAGEC,EAHF,KAItBC,qBAAU,WACNC,YAAW,WAGHC,aAAaC,SAAWD,aAAaC,OAAS,KAAO,GACrDN,GAAiB,GACjBK,aAAaC,QAAUD,aAAaC,OAAS,GACtCD,aAAaC,OACpBD,aAAaC,QAAUD,aAAaC,OAAS,GAE7CN,GAAiB,GACjBK,aAAaC,OAAS,KAE3B,OACJ,CAACN,IAEJ,IAGMO,EAAY,SAACC,GACfN,EAAmBM,IAEvB,OACI,kBAAC1B,EAAD,KACI,uBAAG2B,UAAU,mBAET,0BAAMC,MAAM,iBAAiBD,UAAU,IACnC,4BAAQA,UAAU,gBAAgBE,aAAcN,aAAaO,OAASC,KAAKC,MAAMT,aAAaO,QAAQG,GAAK,UAAWC,SAXjH,SAACC,GAClBtB,EAAcuB,aAAaD,EAAEE,OAAOX,QAUsHY,KAAK,WAAWL,GAAG,QAC7J,4BAAQK,KAAK,UAAUZ,MAAM,WAA7B,aACA,4BAAQY,KAAK,QAAQZ,MAAM,SAA3B,WACA,4BAAQY,KAAK,WAAWZ,MAAM,YAA9B,eAKZ,kBAAC,IAAD,CAAOa,SAAUtB,GACb,yBAAKU,UAAU,oBACX,0BAAMa,KAAK,MAAMC,aAAW,MAAMd,UAAU,QAAQe,QAAS,kBAAMxB,GAAiB,KAApF,UAGA,yBAAKyB,IAAKC,IAAaC,IAAI,wBAC3B,uBAAGlB,UAAU,0BAAb,kLAGI,6BAHJ,uBAQR,uBAAGA,UAAU,OACT,0BAAMA,UAAS,mBAAcR,EAAkB,SAAW,MAAQuB,QAAS,kBAAMjB,GAAU,KAA3F,SACA,0BAAME,UAAS,mBAAcR,EAAkB,KAAO,UAAauB,QAAS,kBAAMjB,GAAU,KAA5F,cAIAN,EACJ,kBAAC,IAAD,MAEA,kBAAC,IAAD","file":"static/js/12.4a16b2c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chattingSvg.3fcfb76f.svg\";","import React, { useState, useEffect, useContext } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { ContextData } from '../../context/contextData'\r\nimport SingleCoinRates from \"../admin/rates/singleCoinRates\" //'../ rates/singleCoinRates'\r\nimport chattingSvg from \"../../images/chattingSvg.svg\"\r\n// import BuySellComponent from '../../components/buySellComponent/buySellComponent'\r\nimport { Modal } from '../../components'\r\nimport SellGiftCardComponent  from '../../components/sellGiftCardCOmponent/sellGiftCardComponent'\r\n\r\nconst Container = styled.div`\r\n    grid-column: 1/-1;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\r\n    /* gap: 10rem; */\r\n    min-height: 100vh;\r\n    width: 100%;\r\n    justify-items: center;\r\n    position: relative;\r\n    /* align-items: center; */\r\n    place-self: center;\r\n    grid-row: auto;\r\n    .selectContainer{\r\n        grid-column: 1/-1;\r\n        justify-self: flex-end;\r\n        display: flex;\r\n        padding: 2rem;\r\n        height: fit-content;\r\n        .region-select{\r\n            background: transparent;\r\n            padding: .5rem 1rem;\r\n            color: ${props => props.theme.colorDark};\r\n            border-radius: .5rem;\r\n            /* margin-bottom: 1rem; */\r\n            option{\r\n                color: ${props => props.theme.colorPrimary}\r\n            }\r\n            &:focus{\r\n                outline: none;\r\n            }\r\n        }\r\n    }\r\n    .modal__container{\r\n        place-items: center;\r\n        background: ${props => props.theme.colorLight};\r\n        padding: 2rem 3rem;\r\n        height: max-content;\r\n        align-self: center;\r\n        color: ${props => props.theme.colorDark};\r\n        text-align: center;\r\n        position: relative;\r\n        border-radius: 1rem;\r\n        display: grid;\r\n        max-width: 65rem;\r\n        justify-self: center;\r\n\r\n        .close{\r\n            justify-self: flex-end;\r\n            cursor: pointer;\r\n        }\r\n        img{\r\n            height: 20rem;\r\n            width: 20rem;\r\n        }\r\n        &--text{\r\n            padding: 1rem;\r\n            font-size: ${props => props.theme.font.large};\r\n        }\r\n        &-address{\r\n            font-size: ${props => props.theme.font.large};\r\n            color: ${props => props.theme.colorSecondary};\r\n        }\r\n    }\r\n    .tab{\r\n        display: flex;\r\n        place-content: center;\r\n        width: 100%;\r\n        grid-column: 1/-1;\r\n        height: fit-content;\r\n        &-item{\r\n            padding: 1rem 3rem;\r\n            font-size: ${props => props.theme.font.xlarge};\r\n            color: ${props => props.theme.colorPrimary};\r\n            cursor: pointer;\r\n            /* font-weight : medium; */\r\n            text-align: center;\r\n        }\r\n        .active{\r\n            border-bottom: solid 2px ${props => props.theme.colorSecondary};\r\n        }\r\n    }\r\n`\r\nconst UserBuySell = () => {\r\n    const regionContext = useContext(ContextData)\r\n    const [isModalActive, setIsModalActive] = useState(false)\r\n    const [showCoinOptions, setShowCoinOptions] = useState(true)\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            // console.log(typeof +localStorage.counts);\r\n\r\n            if (localStorage.counts && +localStorage.counts % 10 === 0) {\r\n                setIsModalActive(true)\r\n                localStorage.counts = +localStorage.counts + 1\r\n            } else if (localStorage.counts) {\r\n                localStorage.counts = +localStorage.counts + 1\r\n            } else {\r\n                setIsModalActive(true);\r\n                localStorage.counts = 1\r\n            }\r\n        }, 3000)\r\n    }, [setIsModalActive])\r\n\r\n    const selectRegion = (e) => {\r\n        regionContext.changeRegion(e.target.value)\r\n    }\r\n    const switchTab = (value) => {\r\n        setShowCoinOptions(value)\r\n    }\r\n    return (\r\n        <Container>\r\n            <p className=\"selectContainer\">\r\n\r\n                <span title=\"Select Country\" className=\"\">\r\n                    <select className=\"region-select\" defaultValue={localStorage.region ? JSON.parse(localStorage.region).id : \"nigeria\"} onChange={selectRegion} name=\"language\" id=\"lang\">\r\n                        <option name=\"nigeria\" value=\"nigeria\" > Nigeria </option>\r\n                        <option name=\"ghana\" value=\"ghana\"> Ghana </option>\r\n                        <option name=\"cameroon\" value=\"cameroon\">Cameroon</option>\r\n                    </select>\r\n                </span>\r\n            </p>\r\n\r\n            <Modal isActive={isModalActive}>\r\n                <div className=\"modal__container\">\r\n                    <span role=\"img\" aria-label=\"img\" className=\"close\" onClick={() => setIsModalActive(false)}>\r\n                        ‚ùå\r\n                    </span>\r\n                    <img src={chattingSvg} alt=\"homepage modal icon\" />\r\n                    <p className=\"modal__container--text\">\r\n                        Due to constant changes in market price, contact customer care via the\r\n                        live chat icon on the bottom right hand corner of your screen for lower rate latency trading experience.\r\n                        <br /> Happy Trading :)\r\n                    </p>\r\n                </div>\r\n            </Modal>\r\n\r\n            <p className=\"tab\">\r\n                <span className={`tab-item ${showCoinOptions ? \"active\" : null}`} onClick={() => switchTab(true)}>Coins</span>\r\n                <span className={`tab-item ${showCoinOptions ? null : \"active\" }`} onClick={() => switchTab(false)}>GiftCards</span>\r\n            </p>\r\n\r\n            {\r\n                showCoinOptions ?\r\n            <SingleCoinRates />\r\n            :\r\n            <SellGiftCardComponent />\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserBuySell\r\n"],"sourceRoot":""}