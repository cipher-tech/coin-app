{"version":3,"sources":["pages/masterAdmin/widthdrawlRequest/widthdrawlRequest.jsx"],"names":["Container","styled","div","props","theme","colorLight","breakPoints","bpSmall2","colorPrimary","mapDispatchToProps","fetchAllWidthdrawl","fetchAllWidthdrawlActionCreator","connect","allWidthdrawl","widthdrawls","useState","fetchedWidthdrawl","setFetchedWidthdrawl","popUpMessage","setPopUpMessage","showpopUpMessage","setShowPopUpMessage","hasError","setHasError","useEffect","auth_token","JSON","parse","localStorage","getItem","user","Axios","get","routes","api","adminWidthdrawl","then","response","data","res","catch","error","console","log","columns","Header","accessor","rowInfo","coin_address","render","value","map","CoinAddress","id","Cell","row","className","onClick","e","acceptWidthdrawl","original","amount","slug","user_id","status","deleteRequest","post","adminDeleteWidthdrawl","action","adminAcceptWidthdrawl","color","expandedComponent","style","fontSize","height","width","display","overflow","Object","values","images","photo","i","key","src","alt","handleVerifyClick","tableColumns"],"mappings":"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","file":"static/js/29.f28ccd27.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n// import rateImage from \"../../../images/rate.png\"\r\n// import Table from './table'\r\nimport Table from '../../../components/table/tablePagination'\r\nimport { connect } from 'react-redux'\r\nimport { useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport { useState } from 'react'\r\nimport routes from '../../../navigation/routes'\r\nimport { StyledButton, PopUpMessage } from '../../../components'\r\nimport {fetchAllWidthdrawlActionCreator } from '../../../reduxStore'\r\n\r\n\r\nconst Container = styled.div`\r\n    grid-column: 2/-1;\r\n    display: grid;\r\n    min-height: 100%;\r\n    min-width: 100%;\r\n    align-items: flex-start;\r\n    background: ${props => props.theme.colorLight};\r\n    border-radius: 2rem 0 0 2rem;\r\n    z-index: 30;\r\n    .rate{\r\n\t\tgrid-column: 1/-1;\r\n\t\tdisplay: grid;\r\n\t\twidth: 100%;\r\n\t\tpadding: 3rem;\r\n\t\t/* place-items: center; */\r\n\t\tjustify-items: center;\r\n\t\talign-items: space-around;\r\n\t\tjustify-self: flex-start;\r\n\t\tposition: relative;\r\n\t\t@media only screen and (max-width: ${props => props.theme.breakPoints.bpSmall2}) {\r\n\t\t\tpadding: 3rem 0;\r\n\t\t}\r\n\t\t\r\n      &__title{   \r\n        justify-self: flex-start;\r\n        font-weight: 500;\r\n        color: ${props => props.theme.colorPrimary};\r\n        font-family: ProximaNovaSoftW03-Regular;\r\n        position: relative;\r\n\r\n        &::after{\r\n          content: '';\r\n          position: absolute;\r\n          width: 120%;\r\n          height: .4rem;\r\n          bottom: 0;\r\n          left: 0;\r\n          background: ${props => props.theme.colorPrimary};\r\n        }\r\n      }\r\n    }\r\n    img{\r\n      /* height: 100%; */\r\n      width: 80%;        \r\n    }\r\n\r\n    \r\n`\r\nfunction AdminWidthdrawlRequest({allWidthdrawl, fetchAllWidthdrawl}) {\r\n\t// const [token, setToken] = useState([])\r\n\tconst [fetchedWidthdrawl, setFetchedWidthdrawl] = useState(false)\r\n\tconst [popUpMessage, setPopUpMessage] = useState(null)\r\n    const [showpopUpMessage, setShowPopUpMessage] = useState(false)\r\n    const [hasError, setHasError] = useState(false)\r\n\r\n\r\n\t// let authToken\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst auth_token = JSON.parse(localStorage.getItem(\"userInfo\")).user.auth_token\r\n\t\t// console.log(auth_token);\r\n\t\t\r\n\t\tAxios.get(`${routes.api.adminWidthdrawl}?token=${auth_token}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\t// console.log(response.data.data);\r\n\r\n\t\t\t\tfetchAllWidthdrawl(response.data.data)\r\n\t\t\t\treturn response.data;\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetFetchedWidthdrawl(true)\r\n\t\t\t\t// console.log(allWidthdrawl)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n                // alert(`An Error Occured! ${error}`);\r\n                console.log(error);\r\n\t\t\t});\r\n\r\n\t}, [fetchAllWidthdrawl] )\r\n\tconst columns = [\r\n\t\t// {\r\n\t\t// \t// Make an expander cell\r\n\t\t// \tHeader: () => null, // No header\r\n\t\t// \tid: 'expander', // It needs an ID\r\n\t\t// \tCell: ({ row }) => (\r\n\t\t// \t  // Use Cell to render an expander for each row.\r\n\t\t// \t  // We can use the getToggleRowExpandedProps prop-getter\r\n\t\t// \t  // to build the expander.\r\n\t\t// \t  <span {...row.getToggleRowExpandedProps()}>\r\n\t\t// \t\t{row.isExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}\r\n\t\t// \t  </span>\r\n\t\t// \t),\r\n\t\t//   },\r\n\t\t{\r\n\t\t\tHeader: 'Withdrawal Request',\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Amount',\r\n\t\t\t\t\taccessor: 'amount',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'email',\r\n\t\t\t\t\taccessor: 'email',\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Coin Address', \r\n\t\t\t\t\taccessor: (rowInfo) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t  <span>\r\n\t\t\t\t\t\t   {rowInfo?.user?.coin_address || \"none\"}\r\n\t\t\t\t\t\t  </span>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t  },\r\n\t\t\t\t\trender: (rowInfo) => {\r\n\t\t\t\t\t  return (\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t {rowInfo.value.map(CoinAddress => (<span>{console.log(CoinAddress.user)}</span>))}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t}\r\n\t\t\t\t  },\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Status',\r\n\t\t\t\t\taccessor: 'status',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tHeader: 'Transaction Id',\r\n\t\t\t\t\taccessor: 'slug',\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\t// Make an expander cell\r\n\t\t\tHeader: () => null, // No header\r\n\t\t\tid: 'action', // It needs an ID\r\n\t\t\tCell: ({ row }) => (\r\n\t\t\t  // Use Cell to render an expander for each row.\r\n\t\t\t  // We can use the getToggleRowExpandedProps prop-getter\r\n\t\t\t  // to build the expander.\r\n\r\n\t\t\t  <div className=\"options_btn\">\r\n\t\t\t  <StyledButton onClick={(e) => acceptWidthdrawl(row.original.amount, \r\n                row.original.id, \r\n                row.original.slug,\r\n                row.original.user_id, \r\n                row.original.status) }>\r\n\t\t\t\t  Accept\r\n\t\t\t  </StyledButton>\r\n\r\n\t\t\t  <StyledButton onClick={(e) => deleteRequest(row.original.id)}>\r\n\t\t\t\t  Delete\r\n\t\t\t\t</StyledButton>\r\n\t\t  </div>\r\n\t\t\t \r\n\t\t\t),\r\n\t\t  },\r\n\t]\r\n\r\n\tconst deleteRequest = (id) => {\r\n\t\t// console.log(user_id);\r\n\t\tconst auth_token = JSON.parse(localStorage.getItem(\"userInfo\")).user.auth_token\r\n\r\n\t\tAxios.post(`${routes.api.adminDeleteWidthdrawl}?token=${auth_token}`, {id: id, action: \"delete\" })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetShowPopUpMessage(false)\r\n\t\t\t\tif (res.data.status === \"success\") {\r\n\t\t\t\t\tsetPopUpMessage(res.data.data[0])\r\n\t\t\t\t}\r\n\t\t\t\treturn res.data.data[1];\r\n\t\t\t\t// console.log(res.data);\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetShowPopUpMessage(true)\r\n\t\t\t\tfetchAllWidthdrawl(res)\r\n\t\t\t})\r\n\t\t\t.catch(res => {\r\n\t\t\t\tsetPopUpMessage(res.data.data)\r\n\t\t\t\tsetShowPopUpMessage(true)\r\n\t\t\t})\r\n\t}\r\n\tconst expandedComponent = (row) => (\r\n\t\t<div\r\n        style={{\r\n          fontSize: '10px',\r\n          height: \"20rem\",\r\n          width: \"100%\",\r\n          display: \"grid\",\r\n         \"gridTemplateColumns\": \"1fr 1fr 1fr\",\r\n         overflow: \"hidden\"\r\n\r\n        }}\r\n      >\r\n        {/* <code>{JSON.stringify({ values: row.values.images }, null, 2)}</code> */}\r\n        {Object.values(JSON.parse(row.values.images)).map((photo,i) => (\r\n          <img key={i} src={`http://localhost:8000/images/${photo}`} alt=\"acceptWidthdrawl info\" />\r\n          ))}\r\n      </div>\r\n\t)\r\n\tconst acceptWidthdrawl = (amount, id, slug,user_id,status) => {\r\n\t\t// console.log();\r\n        const auth_token = JSON.parse(localStorage.getItem(\"userInfo\")).user.auth_token\r\n        const data = {\r\n            amount: amount,\r\n            id: id,\r\n            slug: slug,\r\n            user_id: user_id,\r\n            status: status\r\n        }\r\n        console.log(data);\r\n\t\tAxios.post(`${routes.api.adminAcceptWidthdrawl}?token=${auth_token}`, data)\r\n\t\t.then( res => {\r\n\t\t\tsetShowPopUpMessage(false)\r\n\t\t\tif (res.data.status === \"success\") {\r\n                setHasError(false)\r\n\t\t\t\tsetPopUpMessage(res.data.data[0])\r\n\t\t\t}else{\r\n                setPopUpMessage(res.data.data)\r\n                setHasError(true)\r\n            }\r\n\t\t\treturn res.data.data[1];\r\n\t\t\t// console.log(res.data);\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tsetShowPopUpMessage(true)\r\n\t\t\tfetchAllWidthdrawl(res)\r\n\t\t})\r\n\t\t// .catch(res => {\r\n\t\t// \tsetPopUpMessage(res.data.data)\r\n\t\t// \tsetShowPopUpMessage(true)\r\n\t\t// })\r\n\t}\r\n\treturn (\r\n\t\t<Container color=\"\">\r\n\t\t\t<div className=\"rate\">\r\n\t\t\t{showpopUpMessage ? <PopUpMessage error={hasError}> {popUpMessage} <span onClick={() => setShowPopUpMessage(false) }>âœ–</span> </PopUpMessage> : null}\r\n\t\t\t\t<h1 className=\"rate__title\">Withdrawal Request</h1>\r\n\t\t\t\t{fetchedWidthdrawl ? <Table data={allWidthdrawl.widthdrawls || []} expandedComponent={expandedComponent} handleVerifyClick={acceptWidthdrawl} tableColumns={columns} /> : null}\r\n\t\t\t\t{/* <Table tableColumns={columns} /> */}\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ widthdrawls }) => ({\r\n\tallWidthdrawl: widthdrawls\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\tfetchAllWidthdrawl: fetchAllWidthdrawlActionCreator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminWidthdrawlRequest)\r\n"],"sourceRoot":""}